{"mappings":"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","sources":["src/index.js","src/components/Form.js","src/hooks/useStyles.js","src/components/Factory.js","src/components/TitleField.js","src/components/TextField.js","src/hooks/useErrorMessage.js","src/components/SelectField.js","src/components/RadioField.js","src/components/CheckboxField.js","src/components/UploadField.js","src/components/SignatureField.js","src/components/FlexForm.js"],"sourcesContent":["export { Form } from \"./components/Form\"\nexport { FlexForm } from \"./components/FlexForm\"\nexport { useStyles } from \"./hooks/useStyles\"\nexport { useErrorMessage } from \"./hooks/useErrorMessage\"","import React, { useMemo } from \"react\"\nimport { Container, ButtonGroup, Button } from \"react-bootstrap\"\nimport { useForm, FormProvider } from \"react-hook-form\"\nimport merge from \"lodash.merge\"\n\nimport { StyleCtx } from \"../hooks/useStyles\"\n\nimport { renderField } from \"./Factory\"\n\nconst defaultStyles = {}\n\nexport const Form = (props) => {\n\n    const {\n        title,\n        schema = {},\n        handleSubmit,\n        formOptions = {},\n        overwriteDefaultStyles,\n        buttons,\n        styles = {},\n    } = props\n\n    const form = useForm(formOptions)\n\n    const baseStyles = useMemo(() => {\n        return overwriteDefaultStyles ? styles : merge(defaultStyles, styles)\n    }, [ styles, overwriteDefaultStyles ])\n\n    return (\n        <StyleCtx.Provider value={baseStyles}>\n            <FormProvider {...form}>\n                <form\n                    onSubmit={form.handleSubmit(handleSubmit)}\n                    {...baseStyles.form?.container}\n                >\n                    {!!title && <h1 {...baseStyles.form?.title}>{title}</h1>}\n                    <Container spacing={baseStyles.form?.fieldSpacing}>\n                        {Object.entries(schema).map(renderField)}\n                    </Container>\n                    <ButtonGroup {...baseStyles.form?.buttonGroup}>\n                        {buttons?.reset?.hidden ? null : (\n                            <Button type=\"reset\" {...baseStyles.form?.resetButton}>\n                                {buttons?.reset?.text || \"Reset\"}\n                            </Button>\n                        )}\n                        <Button type=\"submit\" {...baseStyles.form?.submitButton}>\n                            {buttons?.submit?.text || \"Submit\"}\n                        </Button>\n                    </ButtonGroup>\n                </form>\n            </FormProvider>\n        </StyleCtx.Provider>\n    )\n}","import { useMemo, createContext, useContext } from \"react\"\n\nexport const StyleCtx = createContext({})\n\nexport const useStyles = (\n    type,\n    inlineStyles\n) => {\n    const baseStyles = useContext(StyleCtx)\n\n    return useMemo(() => {\n        return inlineStyles\n            ? { ...baseStyles[type], ...inlineStyles }\n            : (baseStyles[type])\n    }, [ type, baseStyles, inlineStyles ])\n}\n","import { TitleField } from \"./TitleField\"\nimport { TextField } from \"./TextField\"\nimport { SelectField } from \"./SelectField\"\nimport { RadioField } from \"./RadioField\"\nimport { CheckboxField } from \"./CheckboxField\"\nimport { UploadField } from \"./UploadField\"\nimport { SignatureField } from \"./SignatureField\"\n\nexport const renderField = ([ name, field ]) => {\n  \n    let Component = null\n    \n    switch (field.type) {\n  \n        case \"title\":\n            Component = TitleField\n            break\n\n        case \"text\":\n            Component = TextField\n            break\n      \n        case \"select\":\n            Component = SelectField\n            break\n  \n        case \"radio\":\n            Component = RadioField\n            break\n  \n        case \"checkbox\":\n            Component = CheckboxField\n            break\n\n        case \"upload\":\n            Component = UploadField\n            break\n      \n        case \"signature\":\n            Component = SignatureField\n            break\n  \n        default:\n            console.log(field.type, \"isn't implemented yet!\")\n            break\n    }\n  \n    return (\n        <Component\n            key={name}\n            name={name}\n            field={field}\n            {...field.props}\n        />\n    )\n}","import React, { useMemo } from \"react\"\n\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const TitleField = ({\n    id,\n    name,\n    field,\n}) => {\n    const {\n        label,\n        shouldDisplay,\n        styles = {},\n    } = field\n\n    const fieldStyles = useStyles(\"titleField\", styles)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay() : true\n    }, [ shouldDisplay ])\n\n    return isVisible ? (\n        <h1 {...fieldStyles}>{label}</h1>\n    ) : null\n}","import React, { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form, FormGroup, FormControl } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const TextField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n    const {\n        label,\n        placeholder,\n        htmlInputType,\n        helperText,\n        required = false,\n        leftInputAddon,\n        rightInputAddon,\n        shouldDisplay,\n        styles = {},\n    } = field\n\n    const fieldStyles = useStyles(\"textField\", styles)\n\n    const { register, watch, handleSubmit } = useFormContext()\n\n    const errorMessage = useErrorMessage(name, label)\n\n    const values = watch(name)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay(values) : true\n    }, [ values, shouldDisplay ])\n\n    console.log(\"handle\", handleSubmit)\n\n    return isVisible ? (\n        <Form.Group\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n            {/* {!!leftInputAddon || rightInputAddon ? (\n        <InputGroup {...fieldStyles.inputGroup}>\n          {!!leftInputAddon && <InputLeftAddon {...leftInputAddon} />}\n          <Input\n            data-testid={id}\n            type={htmlInputType || 'text'}\n            name={name}\n            aria-label={name}\n            ref={register()}\n            placeholder={placeholder}\n            defaultValue={defaultValue || ''}\n            {...fieldStyles.input}\n          />\n          {!!rightInputAddon && <InputRightAddon {...rightInputAddon} />}\n        </InputGroup>\n      ) : ( */}\n            <FormControl\n                type={htmlInputType || \"text\"}\n                id={id}\n                name={name}\n                aria-label={name}\n                {...register(name)}\n                onBlur={() => {\n                    console.log(\"test blur\"); handleSubmit()\n                }}\n                required={required}\n                placeholder={placeholder}\n                defaultValue={defaultValue || \"\"}\n                {...fieldStyles.input}\n            />\n            {/* )} */}\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </Form.Group>\n    ) : null\n}\n","import { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nexport const useErrorMessage = (name, label) => {\n    const { formState: { errors } } = useFormContext()\n\n    return useMemo(() => {\n        const error = errors[name]\n\n        if (!error) return undefined\n\n        const message = error.message\n\n        if (message) return message.replace(name, label || name)\n        return \"Field validation failed\"\n    }, [ errors, name, label ])\n}\n","import React, { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form, FormGroup, FormControl } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const SelectField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n\n    const { label, helperText, required = false, multi = false, shouldDisplay, styles = {} } = field\n\n    const { register, watch } = useFormContext()\n\n    const values = watch(name)\n\n    const fieldStyles = useStyles(\"selectField\", styles)\n\n    const errorMessage = useErrorMessage(name, label)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay(values) : true\n    }, [ values, shouldDisplay ])\n\n    return isVisible ? (\n        <FormGroup\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n            <FormControl\n                as=\"select\"\n                id={id}\n                name={name}\n                {...register(name)}\n                required={required}\n                multiple={multi}\n                defaultValue={defaultValue || field.options[0].value}\n                {...fieldStyles.select}\n            >\n                {field.options.map(option => (\n                    <option key={option.value} value={option.value} disabled={option.disabled}>\n                        {option.label || option.value}\n                    </option>\n                ))}\n            </FormControl>\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </FormGroup>\n    ) : null\n}","import React, { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form, FormGroup } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const RadioField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n\n    const { label, helperText, required = false, shouldDisplay, styles = {} } = field\n\n    const { register } = useFormContext()\n    const fieldStyles = useStyles(\"radioField\", styles)\n    const errorMessage = useErrorMessage(name, label)\n\n    console.log(\"error\", errorMessage)\n\n    return (\n        <FormGroup\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n      \n            <div>\n                {field.options.map((option, i) => (\n                    <Form.Check \n                        key={i}\n                        type=\"radio\"\n                        name={name}\n                        {...register(name)}\n                        id={name + \"-\" + option.label}\n                        label={option.label}\n                        value={option.value}\n                    />\n                ))}\n            </div>\n\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </FormGroup>\n    )\n}","import React from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const CheckboxField = ({\n    id,\n    name,\n    field,\n}) => {\n\n    const { label, helperText, required = false, styles = {} } = field\n\n    const { register, watch } = useFormContext()\n\n    const fieldStyles = useStyles(\"checkboxField\", styles)\n\n    const errorMessage = useErrorMessage(name, label)\n\n    return (\n        <Form.Group\n            key={id}\n            controlId={id}\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n      \n            <div>\n                {field.options.map((option, i) => (\n                    <Form.Check \n                        key={i}\n                        type=\"checkbox\"\n                        name={name}\n                        {...register(name)}\n                        id={name + \"-\" + option.label}\n                        label={option.label}\n                        value={option.value}\n                    />\n                ))}\n            </div>\n\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </Form.Group>\n    )\n}","import React, { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form, FormControl } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const UploadField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n    const {\n        label,\n        placeholder,\n        helperText,\n        required = false,\n        accept = \"*\",\n        shouldDisplay,\n        styles = {},\n    } = field\n\n    const fieldStyles = useStyles(\"uploadField\", styles)\n\n    const { register, watch } = useFormContext()\n\n    const errorMessage = useErrorMessage(name, label)\n\n    const values = watch(name)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay(values) : true\n    }, [ values, shouldDisplay ])\n\n    return isVisible ? (\n        <Form.Group\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n            <FormControl\n                type=\"file\"\n                accept={accept}\n                name={name}\n                aria-label={name}\n                {...register(name)}\n                required={required}\n                placeholder={placeholder}\n                defaultValue={defaultValue || \"\"}\n                {...fieldStyles.input}\n            />\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </Form.Group>\n    ) : null\n}","import React, { useMemo, useRef } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form } from \"react-bootstrap\"\nimport SignaturePad from \"react-signature-canvas\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const SignatureField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n\n    const {\n        label,\n        placeholder,\n        helperText,\n        required = false,\n        shouldDisplay,\n        styles = {},\n    } = field\n\n    const ref = useRef(0)\n    const fieldStyles = useStyles(\"signatureField\", styles)\n    const { setValue, watch } = useFormContext()\n    const errorMessage = useErrorMessage(name, label)\n\n    const values = watch(name)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay(values) : true\n    }, [ values, shouldDisplay ])\n\n    const save = () => {\n        setValue(name, ref.current.getTrimmedCanvas().toDataURL(\"image/png\"))\n    }\n\n    const clear = () => ref.current.clear()\n\n    return isVisible ? (\n        <Form.Group\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n            <div className=\"row\">\n                <div className=\"col-10\">\n                    <SignaturePad\n                        canvasProps={{ style: { width: \"100%\", height: fieldStyles.height, background: \"#fff\" } }}\n                        ref={ref}\n                        onEnd={save}\n                    />\n                </div>\n                <div className=\"col-2 d-flex align-items-center\">\n                    <button className=\"btn btn-primary\" onClick={clear}>\n              ↺\n                    </button>\n                </div>\n            </div>\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </Form.Group>\n    ) : null\n}\n","import React, { useMemo } from \"react\"\nimport { useForm, FormProvider } from \"react-hook-form\"\nimport merge from \"lodash.merge\"\n\nimport { StyleCtx } from \"../hooks/useStyles\"\nimport { renderField } from \"./Factory\"\n\nconst defaultStyles = {}\n\nexport const FlexForm = (props) => {\n\n    const {\n        schema = {},\n        handleSubmit,\n        formOptions = {},\n        overwriteDefaultStyles,\n        children,\n        styles = {},\n    } = props\n\n    let formElements = \"undefined\" !== typeof props.step ? Object.entries(schema[props.step]).map(renderField) : Object.entries(schema).map(renderField)\n\n    let elements = children instanceof Array ? children.reduce((acc, item) => {\n\n        if (\"function\" ===  typeof item) {\n            item = item(formElements)\n        }\n    \n        acc.push(item)\n    \n        return acc\n    \n    }, []) : children(formElements)\n\n    const form = useForm(formOptions)\n\n    const baseStyles = useMemo(() => {\n        return overwriteDefaultStyles ? styles : merge(defaultStyles, styles)\n    }, [ styles, overwriteDefaultStyles ])\n\n    return (\n        <StyleCtx.Provider value={baseStyles}>\n            <FormProvider {...form}>\n                <form\n                    onSubmit={form.handleSubmit(handleSubmit)}\n                    {...baseStyles.form?.container}\n                >\n                    {elements}\n                </form>\n            </FormProvider>\n        </StyleCtx.Provider>\n    )\n}"],"names":[],"version":3,"file":"index.esm.js.map"}