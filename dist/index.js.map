{"mappings":"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","sources":["node_modules/lodash.merge/index.js","node_modules/prop-types/index.js","node_modules/prop-types/factoryWithThrowingShims.js","node_modules/prop-types/lib/ReactPropTypesSecret.js","node_modules/signature_pad/dist/signature_pad.mjs","node_modules/trim-canvas/build/index.js","src/index.js","src/components/Form.js","node_modules/react-bootstrap/esm/Button.js","node_modules/classnames/index.js","node_modules/@restart/ui/esm/Button.js","node_modules/react-bootstrap/esm/ThemeProvider.js","node_modules/react-bootstrap/esm/ButtonGroup.js","node_modules/react-bootstrap/esm/Container.js","node_modules/react-hook-form/dist/index.esm.mjs","node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","node_modules/react-hook-form/src/utils/isDateObject.ts","node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","node_modules/react-hook-form/src/utils/isObject.ts","node_modules/react-hook-form/src/logic/getEventValue.ts","node_modules/react-hook-form/src/logic/getNodeParentName.ts","node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","node_modules/react-hook-form/src/utils/compact.ts","node_modules/react-hook-form/src/utils/isUndefined.ts","node_modules/react-hook-form/src/utils/get.ts","node_modules/react-hook-form/src/constants.ts","node_modules/react-hook-form/src/useFormContext.tsx","node_modules/react-hook-form/src/logic/getProxyFormState.ts","node_modules/react-hook-form/src/utils/isEmptyObject.ts","node_modules/react-hook-form/src/logic/shouldRenderFormState.ts","node_modules/react-hook-form/src/utils/convertToArrayPayload.ts","node_modules/react-hook-form/src/logic/shouldSubscribeByName.ts","node_modules/react-hook-form/src/useSubscribe.ts","node_modules/react-hook-form/src/useFormState.ts","node_modules/react-hook-form/src/utils/isString.ts","node_modules/react-hook-form/src/logic/generateWatchOutput.ts","node_modules/react-hook-form/src/utils/isPlainObject.ts","node_modules/react-hook-form/src/utils/isWeb.ts","node_modules/react-hook-form/src/utils/cloneObject.ts","node_modules/react-hook-form/src/useWatch.ts","node_modules/react-hook-form/src/useController.ts","node_modules/react-hook-form/src/controller.tsx","node_modules/react-hook-form/src/logic/appendErrors.ts","node_modules/react-hook-form/src/utils/isKey.ts","node_modules/react-hook-form/src/utils/stringToPath.ts","node_modules/react-hook-form/src/utils/set.ts","node_modules/react-hook-form/src/logic/focusFieldBy.ts","node_modules/react-hook-form/src/logic/generateId.ts","node_modules/react-hook-form/src/logic/getFocusFieldName.ts","node_modules/react-hook-form/src/logic/isWatched.ts","node_modules/react-hook-form/src/logic/updateFieldArrayRootError.ts","node_modules/react-hook-form/src/utils/isBoolean.ts","node_modules/react-hook-form/src/utils/isFileInput.ts","node_modules/react-hook-form/src/utils/isFunction.ts","node_modules/react-hook-form/src/utils/isMessage.ts","node_modules/react-hook-form/src/utils/isRadioInput.ts","node_modules/react-hook-form/src/utils/isRegex.ts","node_modules/react-hook-form/src/logic/getCheckboxValue.ts","node_modules/react-hook-form/src/logic/getRadioValue.ts","node_modules/react-hook-form/src/logic/getValidateError.ts","node_modules/react-hook-form/src/logic/getValueAndMessage.ts","node_modules/react-hook-form/src/logic/validateField.ts","node_modules/react-hook-form/src/utils/append.ts","node_modules/react-hook-form/src/utils/fillEmptyArray.ts","node_modules/react-hook-form/src/utils/getValidationModes.ts","node_modules/react-hook-form/src/utils/insert.ts","node_modules/react-hook-form/src/utils/move.ts","node_modules/react-hook-form/src/utils/prepend.ts","node_modules/react-hook-form/src/utils/remove.ts","node_modules/react-hook-form/src/utils/swap.ts","node_modules/react-hook-form/src/utils/unset.ts","node_modules/react-hook-form/src/utils/update.ts","node_modules/react-hook-form/src/useFieldArray.ts","node_modules/react-hook-form/src/utils/createSubject.ts","node_modules/react-hook-form/src/utils/isPrimitive.ts","node_modules/react-hook-form/src/utils/deepEqual.ts","node_modules/react-hook-form/src/utils/isHTMLElement.ts","node_modules/react-hook-form/src/utils/isMultipleSelect.ts","node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","node_modules/react-hook-form/src/utils/live.ts","node_modules/react-hook-form/src/utils/objectHasFunction.ts","node_modules/react-hook-form/src/logic/getDirtyFields.ts","node_modules/react-hook-form/src/logic/getFieldValueAs.ts","node_modules/react-hook-form/src/logic/getFieldValue.ts","node_modules/react-hook-form/src/logic/getResolverOptions.ts","node_modules/react-hook-form/src/logic/getRuleValue.ts","node_modules/react-hook-form/src/logic/hasValidation.ts","node_modules/react-hook-form/src/logic/schemaErrorLookup.ts","node_modules/react-hook-form/src/logic/skipValidation.ts","node_modules/react-hook-form/src/logic/unsetEmptyArray.ts","node_modules/react-hook-form/src/logic/createFormControl.ts","node_modules/react-hook-form/src/useForm.ts","src/hooks/useStyles.js","src/components/Factory.js","src/components/TitleField.js","src/components/TextField.js","node_modules/react-bootstrap/esm/Form.js","node_modules/react-bootstrap/esm/FormCheck.js","node_modules/react-bootstrap/esm/Feedback.js","node_modules/react-bootstrap/esm/FormCheckInput.js","node_modules/react-bootstrap/esm/FormContext.js","node_modules/react-bootstrap/esm/FormCheckLabel.js","node_modules/react-bootstrap/esm/ElementChildren.js","node_modules/react-bootstrap/esm/FormControl.js","node_modules/warning/warning.js","node_modules/react-bootstrap/esm/FormFloating.js","node_modules/react-bootstrap/esm/createWithBsPrefix.js","node_modules/dom-helpers/esm/camelize.js","node_modules/react-bootstrap/esm/FormGroup.js","node_modules/react-bootstrap/esm/FormLabel.js","node_modules/react-bootstrap/esm/Col.js","node_modules/react-bootstrap/esm/FormRange.js","node_modules/react-bootstrap/esm/FormSelect.js","node_modules/react-bootstrap/esm/FormText.js","node_modules/react-bootstrap/esm/Switch.js","node_modules/react-bootstrap/esm/FloatingLabel.js","src/hooks/useErrorMessage.js","src/components/SelectField.js","src/components/RadioField.js","src/components/CheckboxField.js","src/components/UploadField.js","src/components/SignatureField.js","node_modules/react-signature-canvas/build/index.js","src/components/FlexForm.js"],"sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/*!\n * Signature Pad v2.3.2\n * https://github.com/szimek/signature_pad\n *\n * Copyright 2017 Szymon Nowak\n * Released under the MIT license\n *\n * The main idea and some parts of the code (e.g. drawing variable width Bézier curve) are taken from:\n * http://corner.squareup.com/2012/07/smoother-signatures.html\n *\n * Implementation of interpolation using cubic Bézier curves is taken from:\n * http://benknowscode.wordpress.com/2012/09/14/path-interpolation-using-cubic-bezier-and-control-point-estimation-in-javascript\n *\n * Algorithm for approximated length of a Bézier curve is taken from:\n * http://www.lemoda.net/maths/bezier-length/index.html\n *\n */\n\nfunction Point(x, y, time) {\n  this.x = x;\n  this.y = y;\n  this.time = time || new Date().getTime();\n}\n\nPoint.prototype.velocityFrom = function (start) {\n  return this.time !== start.time ? this.distanceTo(start) / (this.time - start.time) : 1;\n};\n\nPoint.prototype.distanceTo = function (start) {\n  return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n};\n\nPoint.prototype.equals = function (other) {\n  return this.x === other.x && this.y === other.y && this.time === other.time;\n};\n\nfunction Bezier(startPoint, control1, control2, endPoint) {\n  this.startPoint = startPoint;\n  this.control1 = control1;\n  this.control2 = control2;\n  this.endPoint = endPoint;\n}\n\n// Returns approximated length.\nBezier.prototype.length = function () {\n  var steps = 10;\n  var length = 0;\n  var px = void 0;\n  var py = void 0;\n\n  for (var i = 0; i <= steps; i += 1) {\n    var t = i / steps;\n    var cx = this._point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n    var cy = this._point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n    if (i > 0) {\n      var xdiff = cx - px;\n      var ydiff = cy - py;\n      length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n    }\n    px = cx;\n    py = cy;\n  }\n\n  return length;\n};\n\n/* eslint-disable no-multi-spaces, space-in-parens */\nBezier.prototype._point = function (t, start, c1, c2, end) {\n  return start * (1.0 - t) * (1.0 - t) * (1.0 - t) + 3.0 * c1 * (1.0 - t) * (1.0 - t) * t + 3.0 * c2 * (1.0 - t) * t * t + end * t * t * t;\n};\n\n/* eslint-disable */\n\n// http://stackoverflow.com/a/27078401/815507\nfunction throttle(func, wait, options) {\n  var context, args, result;\n  var timeout = null;\n  var previous = 0;\n  if (!options) options = {};\n  var later = function later() {\n    previous = options.leading === false ? 0 : Date.now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n  return function () {\n    var now = Date.now();\n    if (!previous && options.leading === false) previous = now;\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n\nfunction SignaturePad(canvas, options) {\n  var self = this;\n  var opts = options || {};\n\n  this.velocityFilterWeight = opts.velocityFilterWeight || 0.7;\n  this.minWidth = opts.minWidth || 0.5;\n  this.maxWidth = opts.maxWidth || 2.5;\n  this.throttle = 'throttle' in opts ? opts.throttle : 16; // in miliseconds\n  this.minDistance = 'minDistance' in opts ? opts.minDistance : 5;\n\n  if (this.throttle) {\n    this._strokeMoveUpdate = throttle(SignaturePad.prototype._strokeUpdate, this.throttle);\n  } else {\n    this._strokeMoveUpdate = SignaturePad.prototype._strokeUpdate;\n  }\n\n  this.dotSize = opts.dotSize || function () {\n    return (this.minWidth + this.maxWidth) / 2;\n  };\n  this.penColor = opts.penColor || 'black';\n  this.backgroundColor = opts.backgroundColor || 'rgba(0,0,0,0)';\n  this.onBegin = opts.onBegin;\n  this.onEnd = opts.onEnd;\n\n  this._canvas = canvas;\n  this._ctx = canvas.getContext('2d');\n  this.clear();\n\n  // We need add these inline so they are available to unbind while still having\n  // access to 'self' we could use _.bind but it's not worth adding a dependency.\n  this._handleMouseDown = function (event) {\n    if (event.which === 1) {\n      self._mouseButtonDown = true;\n      self._strokeBegin(event);\n    }\n  };\n\n  this._handleMouseMove = function (event) {\n    if (self._mouseButtonDown) {\n      self._strokeMoveUpdate(event);\n    }\n  };\n\n  this._handleMouseUp = function (event) {\n    if (event.which === 1 && self._mouseButtonDown) {\n      self._mouseButtonDown = false;\n      self._strokeEnd(event);\n    }\n  };\n\n  this._handleTouchStart = function (event) {\n    if (event.targetTouches.length === 1) {\n      var touch = event.changedTouches[0];\n      self._strokeBegin(touch);\n    }\n  };\n\n  this._handleTouchMove = function (event) {\n    // Prevent scrolling.\n    event.preventDefault();\n\n    var touch = event.targetTouches[0];\n    self._strokeMoveUpdate(touch);\n  };\n\n  this._handleTouchEnd = function (event) {\n    var wasCanvasTouched = event.target === self._canvas;\n    if (wasCanvasTouched) {\n      event.preventDefault();\n      self._strokeEnd(event);\n    }\n  };\n\n  // Enable mouse and touch event handlers\n  this.on();\n}\n\n// Public methods\nSignaturePad.prototype.clear = function () {\n  var ctx = this._ctx;\n  var canvas = this._canvas;\n\n  ctx.fillStyle = this.backgroundColor;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  this._data = [];\n  this._reset();\n  this._isEmpty = true;\n};\n\nSignaturePad.prototype.fromDataURL = function (dataUrl) {\n  var _this = this;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var image = new Image();\n  var ratio = options.ratio || window.devicePixelRatio || 1;\n  var width = options.width || this._canvas.width / ratio;\n  var height = options.height || this._canvas.height / ratio;\n\n  this._reset();\n  image.src = dataUrl;\n  image.onload = function () {\n    _this._ctx.drawImage(image, 0, 0, width, height);\n  };\n  this._isEmpty = false;\n};\n\nSignaturePad.prototype.toDataURL = function (type) {\n  var _canvas;\n\n  switch (type) {\n    case 'image/svg+xml':\n      return this._toSVG();\n    default:\n      for (var _len = arguments.length, options = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        options[_key - 1] = arguments[_key];\n      }\n\n      return (_canvas = this._canvas).toDataURL.apply(_canvas, [type].concat(options));\n  }\n};\n\nSignaturePad.prototype.on = function () {\n  this._handleMouseEvents();\n  this._handleTouchEvents();\n};\n\nSignaturePad.prototype.off = function () {\n  this._canvas.removeEventListener('mousedown', this._handleMouseDown);\n  this._canvas.removeEventListener('mousemove', this._handleMouseMove);\n  document.removeEventListener('mouseup', this._handleMouseUp);\n\n  this._canvas.removeEventListener('touchstart', this._handleTouchStart);\n  this._canvas.removeEventListener('touchmove', this._handleTouchMove);\n  this._canvas.removeEventListener('touchend', this._handleTouchEnd);\n};\n\nSignaturePad.prototype.isEmpty = function () {\n  return this._isEmpty;\n};\n\n// Private methods\nSignaturePad.prototype._strokeBegin = function (event) {\n  this._data.push([]);\n  this._reset();\n  this._strokeUpdate(event);\n\n  if (typeof this.onBegin === 'function') {\n    this.onBegin(event);\n  }\n};\n\nSignaturePad.prototype._strokeUpdate = function (event) {\n  var x = event.clientX;\n  var y = event.clientY;\n\n  var point = this._createPoint(x, y);\n  var lastPointGroup = this._data[this._data.length - 1];\n  var lastPoint = lastPointGroup && lastPointGroup[lastPointGroup.length - 1];\n  var isLastPointTooClose = lastPoint && point.distanceTo(lastPoint) < this.minDistance;\n\n  // Skip this point if it's too close to the previous one\n  if (!(lastPoint && isLastPointTooClose)) {\n    var _addPoint = this._addPoint(point),\n        curve = _addPoint.curve,\n        widths = _addPoint.widths;\n\n    if (curve && widths) {\n      this._drawCurve(curve, widths.start, widths.end);\n    }\n\n    this._data[this._data.length - 1].push({\n      x: point.x,\n      y: point.y,\n      time: point.time,\n      color: this.penColor\n    });\n  }\n};\n\nSignaturePad.prototype._strokeEnd = function (event) {\n  var canDrawCurve = this.points.length > 2;\n  var point = this.points[0]; // Point instance\n\n  if (!canDrawCurve && point) {\n    this._drawDot(point);\n  }\n\n  if (point) {\n    var lastPointGroup = this._data[this._data.length - 1];\n    var lastPoint = lastPointGroup[lastPointGroup.length - 1]; // plain object\n\n    // When drawing a dot, there's only one point in a group, so without this check\n    // such group would end up with exactly the same 2 points.\n    if (!point.equals(lastPoint)) {\n      lastPointGroup.push({\n        x: point.x,\n        y: point.y,\n        time: point.time,\n        color: this.penColor\n      });\n    }\n  }\n\n  if (typeof this.onEnd === 'function') {\n    this.onEnd(event);\n  }\n};\n\nSignaturePad.prototype._handleMouseEvents = function () {\n  this._mouseButtonDown = false;\n\n  this._canvas.addEventListener('mousedown', this._handleMouseDown);\n  this._canvas.addEventListener('mousemove', this._handleMouseMove);\n  document.addEventListener('mouseup', this._handleMouseUp);\n};\n\nSignaturePad.prototype._handleTouchEvents = function () {\n  // Pass touch events to canvas element on mobile IE11 and Edge.\n  this._canvas.style.msTouchAction = 'none';\n  this._canvas.style.touchAction = 'none';\n\n  this._canvas.addEventListener('touchstart', this._handleTouchStart);\n  this._canvas.addEventListener('touchmove', this._handleTouchMove);\n  this._canvas.addEventListener('touchend', this._handleTouchEnd);\n};\n\nSignaturePad.prototype._reset = function () {\n  this.points = [];\n  this._lastVelocity = 0;\n  this._lastWidth = (this.minWidth + this.maxWidth) / 2;\n  this._ctx.fillStyle = this.penColor;\n};\n\nSignaturePad.prototype._createPoint = function (x, y, time) {\n  var rect = this._canvas.getBoundingClientRect();\n\n  return new Point(x - rect.left, y - rect.top, time || new Date().getTime());\n};\n\nSignaturePad.prototype._addPoint = function (point) {\n  var points = this.points;\n  var tmp = void 0;\n\n  points.push(point);\n\n  if (points.length > 2) {\n    // To reduce the initial lag make it work with 3 points\n    // by copying the first point to the beginning.\n    if (points.length === 3) points.unshift(points[0]);\n\n    tmp = this._calculateCurveControlPoints(points[0], points[1], points[2]);\n    var c2 = tmp.c2;\n    tmp = this._calculateCurveControlPoints(points[1], points[2], points[3]);\n    var c3 = tmp.c1;\n    var curve = new Bezier(points[1], c2, c3, points[2]);\n    var widths = this._calculateCurveWidths(curve);\n\n    // Remove the first element from the list,\n    // so that we always have no more than 4 points in points array.\n    points.shift();\n\n    return { curve: curve, widths: widths };\n  }\n\n  return {};\n};\n\nSignaturePad.prototype._calculateCurveControlPoints = function (s1, s2, s3) {\n  var dx1 = s1.x - s2.x;\n  var dy1 = s1.y - s2.y;\n  var dx2 = s2.x - s3.x;\n  var dy2 = s2.y - s3.y;\n\n  var m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n  var m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n\n  var l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n  var l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n\n  var dxm = m1.x - m2.x;\n  var dym = m1.y - m2.y;\n\n  var k = l2 / (l1 + l2);\n  var cm = { x: m2.x + dxm * k, y: m2.y + dym * k };\n\n  var tx = s2.x - cm.x;\n  var ty = s2.y - cm.y;\n\n  return {\n    c1: new Point(m1.x + tx, m1.y + ty),\n    c2: new Point(m2.x + tx, m2.y + ty)\n  };\n};\n\nSignaturePad.prototype._calculateCurveWidths = function (curve) {\n  var startPoint = curve.startPoint;\n  var endPoint = curve.endPoint;\n  var widths = { start: null, end: null };\n\n  var velocity = this.velocityFilterWeight * endPoint.velocityFrom(startPoint) + (1 - this.velocityFilterWeight) * this._lastVelocity;\n\n  var newWidth = this._strokeWidth(velocity);\n\n  widths.start = this._lastWidth;\n  widths.end = newWidth;\n\n  this._lastVelocity = velocity;\n  this._lastWidth = newWidth;\n\n  return widths;\n};\n\nSignaturePad.prototype._strokeWidth = function (velocity) {\n  return Math.max(this.maxWidth / (velocity + 1), this.minWidth);\n};\n\nSignaturePad.prototype._drawPoint = function (x, y, size) {\n  var ctx = this._ctx;\n\n  ctx.moveTo(x, y);\n  ctx.arc(x, y, size, 0, 2 * Math.PI, false);\n  this._isEmpty = false;\n};\n\nSignaturePad.prototype._drawCurve = function (curve, startWidth, endWidth) {\n  var ctx = this._ctx;\n  var widthDelta = endWidth - startWidth;\n  var drawSteps = Math.floor(curve.length());\n\n  ctx.beginPath();\n\n  for (var i = 0; i < drawSteps; i += 1) {\n    // Calculate the Bezier (x, y) coordinate for this step.\n    var t = i / drawSteps;\n    var tt = t * t;\n    var ttt = tt * t;\n    var u = 1 - t;\n    var uu = u * u;\n    var uuu = uu * u;\n\n    var x = uuu * curve.startPoint.x;\n    x += 3 * uu * t * curve.control1.x;\n    x += 3 * u * tt * curve.control2.x;\n    x += ttt * curve.endPoint.x;\n\n    var y = uuu * curve.startPoint.y;\n    y += 3 * uu * t * curve.control1.y;\n    y += 3 * u * tt * curve.control2.y;\n    y += ttt * curve.endPoint.y;\n\n    var width = startWidth + ttt * widthDelta;\n    this._drawPoint(x, y, width);\n  }\n\n  ctx.closePath();\n  ctx.fill();\n};\n\nSignaturePad.prototype._drawDot = function (point) {\n  var ctx = this._ctx;\n  var width = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n\n  ctx.beginPath();\n  this._drawPoint(point.x, point.y, width);\n  ctx.closePath();\n  ctx.fill();\n};\n\nSignaturePad.prototype._fromData = function (pointGroups, drawCurve, drawDot) {\n  for (var i = 0; i < pointGroups.length; i += 1) {\n    var group = pointGroups[i];\n\n    if (group.length > 1) {\n      for (var j = 0; j < group.length; j += 1) {\n        var rawPoint = group[j];\n        var point = new Point(rawPoint.x, rawPoint.y, rawPoint.time);\n        var color = rawPoint.color;\n\n        if (j === 0) {\n          // First point in a group. Nothing to draw yet.\n\n          // All points in the group have the same color, so it's enough to set\n          // penColor just at the beginning.\n          this.penColor = color;\n          this._reset();\n\n          this._addPoint(point);\n        } else if (j !== group.length - 1) {\n          // Middle point in a group.\n          var _addPoint2 = this._addPoint(point),\n              curve = _addPoint2.curve,\n              widths = _addPoint2.widths;\n\n          if (curve && widths) {\n            drawCurve(curve, widths, color);\n          }\n        } else {\n          // Last point in a group. Do nothing.\n        }\n      }\n    } else {\n      this._reset();\n      var _rawPoint = group[0];\n      drawDot(_rawPoint);\n    }\n  }\n};\n\nSignaturePad.prototype._toSVG = function () {\n  var _this2 = this;\n\n  var pointGroups = this._data;\n  var canvas = this._canvas;\n  var ratio = Math.max(window.devicePixelRatio || 1, 1);\n  var minX = 0;\n  var minY = 0;\n  var maxX = canvas.width / ratio;\n  var maxY = canvas.height / ratio;\n  var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n  svg.setAttributeNS(null, 'width', canvas.width);\n  svg.setAttributeNS(null, 'height', canvas.height);\n\n  this._fromData(pointGroups, function (curve, widths, color) {\n    var path = document.createElement('path');\n\n    // Need to check curve for NaN values, these pop up when drawing\n    // lines on the canvas that are not continuous. E.g. Sharp corners\n    // or stopping mid-stroke and than continuing without lifting mouse.\n    if (!isNaN(curve.control1.x) && !isNaN(curve.control1.y) && !isNaN(curve.control2.x) && !isNaN(curve.control2.y)) {\n      var attr = 'M ' + curve.startPoint.x.toFixed(3) + ',' + curve.startPoint.y.toFixed(3) + ' ' + ('C ' + curve.control1.x.toFixed(3) + ',' + curve.control1.y.toFixed(3) + ' ') + (curve.control2.x.toFixed(3) + ',' + curve.control2.y.toFixed(3) + ' ') + (curve.endPoint.x.toFixed(3) + ',' + curve.endPoint.y.toFixed(3));\n\n      path.setAttribute('d', attr);\n      path.setAttribute('stroke-width', (widths.end * 2.25).toFixed(3));\n      path.setAttribute('stroke', color);\n      path.setAttribute('fill', 'none');\n      path.setAttribute('stroke-linecap', 'round');\n\n      svg.appendChild(path);\n    }\n  }, function (rawPoint) {\n    var circle = document.createElement('circle');\n    var dotSize = typeof _this2.dotSize === 'function' ? _this2.dotSize() : _this2.dotSize;\n    circle.setAttribute('r', dotSize);\n    circle.setAttribute('cx', rawPoint.x);\n    circle.setAttribute('cy', rawPoint.y);\n    circle.setAttribute('fill', rawPoint.color);\n\n    svg.appendChild(circle);\n  });\n\n  var prefix = 'data:image/svg+xml;base64,';\n  var header = '<svg' + ' xmlns=\"http://www.w3.org/2000/svg\"' + ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"' + (' viewBox=\"' + minX + ' ' + minY + ' ' + maxX + ' ' + maxY + '\"') + (' width=\"' + maxX + '\"') + (' height=\"' + maxY + '\"') + '>';\n  var body = svg.innerHTML;\n\n  // IE hack for missing innerHTML property on SVGElement\n  if (body === undefined) {\n    var dummy = document.createElement('dummy');\n    var nodes = svg.childNodes;\n    dummy.innerHTML = '';\n\n    for (var i = 0; i < nodes.length; i += 1) {\n      dummy.appendChild(nodes[i].cloneNode(true));\n    }\n\n    body = dummy.innerHTML;\n  }\n\n  var footer = '</svg>';\n  var data = header + body + footer;\n\n  return prefix + btoa(data);\n};\n\nSignaturePad.prototype.fromData = function (pointGroups) {\n  var _this3 = this;\n\n  this.clear();\n\n  this._fromData(pointGroups, function (curve, widths) {\n    return _this3._drawCurve(curve, widths.start, widths.end);\n  }, function (rawPoint) {\n    return _this3._drawDot(rawPoint);\n  });\n\n  this._data = pointGroups;\n};\n\nSignaturePad.prototype.toData = function () {\n  return this._data;\n};\n\nexport default SignaturePad;\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.trimCanvas=t():e.trimCanvas=t()}(this,function(){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var r={};return t.m=e,t.c=r,t.p=\"\",t(0)}([function(e,t){\"use strict\";function r(e){var t=e.getContext(\"2d\"),r=e.width,n=e.height,o=t.getImageData(0,0,r,n).data,f=a(!0,r,n,o),i=a(!1,r,n,o),c=u(!0,r,n,o),d=u(!1,r,n,o),p=d-c+1,l=i-f+1,s=t.getImageData(c,f,p,l);return e.width=p,e.height=l,t.clearRect(0,0,p,l),t.putImageData(s,0,0),e}function n(e,t,r,n){return{red:n[4*(r*t+e)],green:n[4*(r*t+e)+1],blue:n[4*(r*t+e)+2],alpha:n[4*(r*t+e)+3]}}function o(e,t,r,o){return n(e,t,r,o).alpha}function a(e,t,r,n){for(var a=e?1:-1,u=e?0:r-1,f=u;e?f<r:f>-1;f+=a)for(var i=0;i<t;i++)if(o(i,f,t,n))return f;return null}function u(e,t,r,n){for(var a=e?1:-1,u=e?0:t-1,f=u;e?f<t:f>-1;f+=a)for(var i=0;i<r;i++)if(o(f,i,t,n))return f;return null}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=r}])});","export { Form } from \"./components/Form\"\nexport { FlexForm } from \"./components/FlexForm\"\nexport { useStyles } from \"./hooks/useStyles\"\nexport { useErrorMessage } from \"./hooks/useErrorMessage\"","import React, { useMemo } from \"react\"\nimport { Container, ButtonGroup, Button } from \"react-bootstrap\"\nimport { useForm, FormProvider } from \"react-hook-form\"\nimport merge from \"lodash.merge\"\n\nimport { StyleCtx } from \"../hooks/useStyles\"\n\nimport { renderField } from \"./Factory\"\n\nconst defaultStyles = {}\n\nexport const Form = (props) => {\n\n    const {\n        title,\n        schema = {},\n        handleSubmit,\n        formOptions = {},\n        overwriteDefaultStyles,\n        buttons,\n        styles = {},\n    } = props\n\n    const form = useForm(formOptions)\n\n    const baseStyles = useMemo(() => {\n        return overwriteDefaultStyles ? styles : merge(defaultStyles, styles)\n    }, [ styles, overwriteDefaultStyles ])\n\n    return (\n        <StyleCtx.Provider value={baseStyles}>\n            <FormProvider {...form}>\n                <form\n                    onSubmit={form.handleSubmit(handleSubmit)}\n                    {...baseStyles.form?.container}\n                >\n                    {!!title && <h1 {...baseStyles.form?.title}>{title}</h1>}\n                    <Container spacing={baseStyles.form?.fieldSpacing}>\n                        {Object.entries(schema).map(renderField)}\n                    </Container>\n                    <ButtonGroup {...baseStyles.form?.buttonGroup}>\n                        {buttons?.reset?.hidden ? null : (\n                            <Button type=\"reset\" {...baseStyles.form?.resetButton}>\n                                {buttons?.reset?.text || \"Reset\"}\n                            </Button>\n                        )}\n                        <Button type=\"submit\" {...baseStyles.form?.submitButton}>\n                            {buttons?.submit?.text || \"Submit\"}\n                        </Button>\n                    </ButtonGroup>\n                </form>\n            </FormProvider>\n        </StyleCtx.Provider>\n    )\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) &&\r\n    !Array.isArray(value) &&\r\n    isObjectType(value) &&\r\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\r\n    ? isCheckBoxInput(event.target)\r\n        ? event.target.checked\r\n        : event.target.value\r\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\r\n    if (!path || !isObject(obj)) {\r\n        return defaultValue;\r\n    }\r\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\r\n    return isUndefined(result) || result === obj\r\n        ? isUndefined(obj[path])\r\n            ? defaultValue\r\n            : obj[path]\r\n        : result;\r\n};\n\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    FOCUS_OUT: 'focusout',\r\n    CHANGE: 'change',\r\n};\r\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n    onTouched: 'onTouched',\r\n    all: 'all',\r\n};\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\n\nconst HookFormContext = React.createContext(null);\r\n/**\r\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @returns return all useForm methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\r\nconst useFormContext = () => React.useContext(HookFormContext);\r\n/**\r\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @param props - all useFrom methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\r\nconst FormProvider = (props) => {\r\n    const { children, ...data } = props;\r\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\r\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\r\n    const result = {\r\n        defaultValues: control._defaultValues,\r\n    };\r\n    for (const key in formState) {\r\n        Object.defineProperty(result, key, {\r\n            get: () => {\r\n                const _key = key;\r\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\r\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\r\n                }\r\n                localProxyFormState && (localProxyFormState[_key] = true);\r\n                return formState[_key];\r\n            },\r\n        });\r\n    }\r\n    return result;\r\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, isRoot) => {\r\n    const { name, ...formState } = formStateData;\r\n    return (isEmptyObject(formState) ||\r\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\r\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\r\n            (!isRoot || VALIDATION_MODE.all)));\r\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName\r\n    ? name === signalName\r\n    : !name ||\r\n        !signalName ||\r\n        name === signalName ||\r\n        convertToArrayPayload(name).some((currentName) => currentName &&\r\n            (currentName.startsWith(signalName) ||\r\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\r\n    const _props = React.useRef(props);\r\n    _props.current = props;\r\n    React.useEffect(() => {\r\n        const subscription = !props.disabled &&\r\n            _props.current.subject.subscribe({\r\n                next: _props.current.callback,\r\n            });\r\n        return () => {\r\n            subscription && subscription.unsubscribe();\r\n        };\r\n    }, [props.disabled]);\r\n}\n\n/**\r\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\r\n *\r\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, control } = useForm({\r\n *     defaultValues: {\r\n *     firstName: \"firstName\"\r\n *   }});\r\n *   const { dirtyFields } = useFormState({\r\n *     control\r\n *   });\r\n *   const onSubmit = (data) => console.log(data);\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\r\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useFormState(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, disabled, name, exact } = props || {};\r\n    const [formState, updateFormState] = React.useState(control._formState);\r\n    const _mounted = React.useRef(true);\r\n    const _localProxyFormState = React.useRef({\r\n        isDirty: false,\r\n        dirtyFields: false,\r\n        touchedFields: false,\r\n        isValidating: false,\r\n        isValid: false,\r\n        errors: false,\r\n    });\r\n    const _name = React.useRef(name);\r\n    _name.current = name;\r\n    useSubscribe({\r\n        disabled,\r\n        callback: React.useCallback((value) => _mounted.current &&\r\n            shouldSubscribeByName(_name.current, value.name, exact) &&\r\n            shouldRenderFormState(value, _localProxyFormState.current) &&\r\n            updateFormState({\r\n                ...control._formState,\r\n                ...value,\r\n            }), [control, exact]),\r\n        subject: control._subjects.state,\r\n    });\r\n    React.useEffect(() => {\r\n        _mounted.current = true;\r\n        const isDirty = control._proxyFormState.isDirty && control._getDirty();\r\n        if (isDirty !== control._formState.isDirty) {\r\n            control._subjects.state.next({\r\n                isDirty,\r\n            });\r\n        }\r\n        control._updateValid();\r\n        return () => {\r\n            _mounted.current = false;\r\n        };\r\n    }, [control]);\r\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\r\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal) => {\r\n    if (isString(names)) {\r\n        isGlobal && _names.watch.add(names);\r\n        return get(formValues, names);\r\n    }\r\n    if (Array.isArray(names)) {\r\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\r\n    }\r\n    isGlobal && (_names.watchAll = true);\r\n    return formValues;\r\n};\n\nvar isPlainObject = (tempObject) => {\r\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\r\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\r\n};\n\nvar isWeb = typeof window !== 'undefined' &&\r\n    typeof window.HTMLElement !== 'undefined' &&\r\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\r\n    let copy;\r\n    const isArray = Array.isArray(data);\r\n    if (data instanceof Date) {\r\n        copy = new Date(data);\r\n    }\r\n    else if (data instanceof Set) {\r\n        copy = new Set(data);\r\n    }\r\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\r\n        (isArray || isObject(data))) {\r\n        copy = isArray ? [] : {};\r\n        if (!Array.isArray(data) && !isPlainObject(data)) {\r\n            copy = data;\r\n        }\r\n        else {\r\n            for (const key in data) {\r\n                copy[key] = cloneObject(data[key]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return data;\r\n    }\r\n    return copy;\r\n}\n\n/**\r\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\r\n *\r\n * @remarks\r\n *\r\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\r\n *\r\n * @example\r\n * ```tsx\r\n * const { watch } = useForm();\r\n * const values = useWatch({\r\n *   name: \"fieldName\"\r\n *   control,\r\n * })\r\n * ```\r\n */\r\nfunction useWatch(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\r\n    const _name = React.useRef(name);\r\n    _name.current = name;\r\n    useSubscribe({\r\n        disabled,\r\n        subject: control._subjects.watch,\r\n        callback: (formState) => {\r\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\r\n                const fieldValues = generateWatchOutput(_name.current, control._names, formState.values || control._formValues);\r\n                updateValue(isUndefined(fieldValues) ? defaultValue : cloneObject(fieldValues));\r\n            }\r\n        },\r\n    });\r\n    const [value, updateValue] = React.useState(isUndefined(defaultValue)\r\n        ? control._getWatch(name)\r\n        : defaultValue);\r\n    React.useEffect(() => control._removeUnmounted());\r\n    return value;\r\n}\n\n/**\r\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\r\n *\r\n * @param props - the path name to the form field value, and validation rules.\r\n *\r\n * @returns field properties, field and form state. {@link UseControllerReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function Input(props) {\r\n *   const { field, fieldState, formState } = useController(props);\r\n *   return (\r\n *     <div>\r\n *       <input {...field} placeholder={props.name} />\r\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\r\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useController(props) {\r\n    const methods = useFormContext();\r\n    const { name, control = methods.control, shouldUnregister } = props;\r\n    const isArrayField = isNameInFieldArray(control._names.array, name);\r\n    const value = useWatch({\r\n        control,\r\n        name,\r\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\r\n        exact: true,\r\n    });\r\n    const formState = useFormState({\r\n        control,\r\n        name,\r\n    });\r\n    const _registerProps = React.useRef(control.register(name, {\r\n        ...props.rules,\r\n        value,\r\n    }));\r\n    React.useEffect(() => {\r\n        const updateMounted = (name, value) => {\r\n            const field = get(control._fields, name);\r\n            if (field) {\r\n                field._f.mount = value;\r\n            }\r\n        };\r\n        updateMounted(name, true);\r\n        return () => {\r\n            const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\r\n            (isArrayField\r\n                ? _shouldUnregisterField && !control._stateFlags.action\r\n                : _shouldUnregisterField)\r\n                ? control.unregister(name)\r\n                : updateMounted(name, false);\r\n        };\r\n    }, [name, control, isArrayField, shouldUnregister]);\r\n    return {\r\n        field: {\r\n            name,\r\n            value,\r\n            onChange: React.useCallback((event) => _registerProps.current.onChange({\r\n                target: {\r\n                    value: getEventValue(event),\r\n                    name: name,\r\n                },\r\n                type: EVENTS.CHANGE,\r\n            }), [name]),\r\n            onBlur: React.useCallback(() => _registerProps.current.onBlur({\r\n                target: {\r\n                    value: get(control._formValues, name),\r\n                    name: name,\r\n                },\r\n                type: EVENTS.BLUR,\r\n            }), [name, control]),\r\n            ref: (elm) => {\r\n                const field = get(control._fields, name);\r\n                if (field && elm) {\r\n                    field._f.ref = {\r\n                        focus: () => elm.focus(),\r\n                        select: () => elm.select(),\r\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\r\n                        reportValidity: () => elm.reportValidity(),\r\n                    };\r\n                }\r\n            },\r\n        },\r\n        formState,\r\n        fieldState: Object.defineProperties({}, {\r\n            invalid: {\r\n                enumerable: true,\r\n                get: () => !!get(formState.errors, name),\r\n            },\r\n            isDirty: {\r\n                enumerable: true,\r\n                get: () => !!get(formState.dirtyFields, name),\r\n            },\r\n            isTouched: {\r\n                enumerable: true,\r\n                get: () => !!get(formState.touchedFields, name),\r\n            },\r\n            error: {\r\n                enumerable: true,\r\n                get: () => get(formState.errors, name),\r\n            },\r\n        }),\r\n    };\r\n}\n\n/**\r\n * Component based on `useController` hook to work with controlled component.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\r\n *\r\n * @param props - the path name to the form field value, and validation rules.\r\n *\r\n * @returns provide field handler functions, field and form state.\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { control } = useForm<FormValues>({\r\n *     defaultValues: {\r\n *       test: \"\"\r\n *     }\r\n *   });\r\n *\r\n *   return (\r\n *     <form>\r\n *       <Controller\r\n *         control={control}\r\n *         name=\"test\"\r\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\r\n *           <>\r\n *             <input\r\n *               onChange={onChange} // send value to hook form\r\n *               onBlur={onBlur} // notify when input is touched\r\n *               value={value} // return updated value\r\n *               ref={ref} // set ref for focus management\r\n *             />\r\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\r\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\r\n *           </>\r\n *         )}\r\n *       />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nconst Controller = (props) => props.render(useController(props));\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\r\n    ? {\r\n        ...errors[name],\r\n        types: {\r\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\r\n            [type]: message || true,\r\n        },\r\n    }\r\n    : {};\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || Array.isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(+tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\r\n    for (const key of fieldsNames || Object.keys(fields)) {\r\n        const field = get(fields, key);\r\n        if (field) {\r\n            const { _f, ...currentField } = field;\r\n            if (_f && callback(_f.name)) {\r\n                if (_f.ref.focus) {\r\n                    _f.ref.focus();\r\n                    break;\r\n                }\r\n                else if (_f.refs && _f.refs[0].focus) {\r\n                    _f.refs[0].focus();\r\n                    break;\r\n                }\r\n            }\r\n            else if (isObject(currentField)) {\r\n                focusFieldBy(currentField, callback);\r\n            }\r\n        }\r\n    }\r\n};\n\nvar generateId = () => {\r\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\r\n    ? options.focusName ||\r\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\r\n    : '';\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\r\n    (_names.watchAll ||\r\n        _names.watch.has(name) ||\r\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\r\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar updateFieldArrayRootError = (errors, error, name) => {\r\n    const fieldArrayErrors = compact(get(errors, name));\r\n    set(fieldArrayErrors, 'root', error[name]);\r\n    set(errors, name, fieldArrayErrors);\r\n    return errors;\r\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isMessage = (value) => isString(value) || React.isValidElement(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (Array.isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter((option) => option && option.checked && !option.disabled)\r\n                .map((option) => option.value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        return options[0].checked && !options[0].disabled\r\n            ? // @ts-expect-error expected to work in the browser\r\n                options[0].attributes && !isUndefined(options[0].attributes.value)\r\n                    ? isUndefined(options[0].value) || options[0].value === ''\r\n                        ? validResult\r\n                        : { value: options[0].value, isValid: true }\r\n                    : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: null,\r\n};\r\nvar getRadioValue = (options) => Array.isArray(options)\r\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\r\n        ? {\r\n            isValid: true,\r\n            value: option.value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    if (isMessage(result) ||\r\n        (Array.isArray(result) && result.every(isMessage)) ||\r\n        (isBoolean(result) && !result)) {\r\n        return {\r\n            type,\r\n            message: isMessage(result) ? result : '',\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n    };\n\nvar validateField = async (field, inputValue, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\r\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\r\n    if (!mount || disabled) {\r\n        return {};\r\n    }\r\n    const inputRef = refs ? refs[0] : ref;\r\n    const setCustomValidity = (message) => {\r\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\r\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\r\n            inputRef.reportValidity();\r\n        }\r\n    };\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\r\n        inputValue === '' ||\r\n        (Array.isArray(inputValue) && !inputValue.length);\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = {\r\n            type: exceedMax ? maxType : minType,\r\n            message,\r\n            ref,\r\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\r\n        };\r\n    };\r\n    if (isFieldArray\r\n        ? !Array.isArray(inputValue) || !inputValue.length\r\n        : required &&\r\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\r\n                (isBoolean(inputValue) && !inputValue) ||\r\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\r\n                (isRadio && !getRadioValue(refs).isValid))) {\r\n        const { value, message } = isMessage(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (value) {\r\n            error[name] = {\r\n                type: INPUT_VALIDATION_RULES.required,\r\n                message,\r\n                ref: inputRef,\r\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\r\n            };\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const maxOutput = getValueAndMessage(max);\r\n        const minOutput = getValueAndMessage(min);\r\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\r\n            const valueNumber = ref.valueAsNumber ||\r\n                (inputValue ? +inputValue : inputValue);\r\n            if (!isNullOrUndefined(maxOutput.value)) {\r\n                exceedMax = valueNumber > maxOutput.value;\r\n            }\r\n            if (!isNullOrUndefined(minOutput.value)) {\r\n                exceedMin = valueNumber < minOutput.value;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(inputValue);\r\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\r\n            const isTime = ref.type == 'time';\r\n            const isWeek = ref.type == 'week';\r\n            if (isString(maxOutput.value) && inputValue) {\r\n                exceedMax = isTime\r\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\r\n                    : isWeek\r\n                        ? inputValue > maxOutput.value\r\n                        : valueDate > new Date(maxOutput.value);\r\n            }\r\n            if (isString(minOutput.value) && inputValue) {\r\n                exceedMin = isTime\r\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\r\n                    : isWeek\r\n                        ? inputValue < minOutput.value\r\n                        : valueDate < new Date(minOutput.value);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(error[name].message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if ((maxLength || minLength) &&\r\n        !isEmpty &&\r\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\r\n        const maxLengthOutput = getValueAndMessage(maxLength);\r\n        const minLengthOutput = getValueAndMessage(minLength);\r\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\r\n            inputValue.length > maxLengthOutput.value;\r\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\r\n            inputValue.length < minLengthOutput.value;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(error[name].message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (pattern && !isEmpty && isString(inputValue)) {\r\n        const { value: patternValue, message } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\r\n            error[name] = {\r\n                type: INPUT_VALIDATION_RULES.pattern,\r\n                message,\r\n                ref,\r\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\r\n            };\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        if (isFunction(validate)) {\r\n            const result = await validate(inputValue);\r\n            const validateError = getValidateError(result, inputRef);\r\n            if (validateError) {\r\n                error[name] = {\r\n                    ...validateError,\r\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\r\n                };\r\n                if (!validateAllFieldCriteria) {\r\n                    setCustomValidity(validateError.message);\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            let validationResult = {};\r\n            for (const key in validate) {\r\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n                    break;\r\n                }\r\n                const validateError = getValidateError(await validate[key](inputValue), inputRef, key);\r\n                if (validateError) {\r\n                    validationResult = {\r\n                        ...validateError,\r\n                        ...appendErrorsCurry(key, validateError.message),\r\n                    };\r\n                    setCustomValidity(validateError.message);\r\n                    if (validateAllFieldCriteria) {\r\n                        error[name] = validationResult;\r\n                    }\r\n                }\r\n            }\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = {\r\n                    ref: inputRef,\r\n                    ...validationResult,\r\n                };\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setCustomValidity(true);\r\n    return error;\r\n};\n\nfunction append(data, value) {\r\n    return [...data, ...convertToArrayPayload(value)];\r\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nvar getValidationModes = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n    isOnAll: mode === VALIDATION_MODE.all,\r\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\r\n});\n\nfunction insert(data, index, value) {\r\n    return [\r\n        ...data.slice(0, index),\r\n        ...convertToArrayPayload(value),\r\n        ...data.slice(index),\r\n    ];\r\n}\n\nvar moveArrayAt = (data, from, to) => {\r\n    if (!Array.isArray(data)) {\r\n        return [];\r\n    }\r\n    if (isUndefined(data[to])) {\r\n        data[to] = undefined;\r\n    }\r\n    data.splice(to, 0, data.splice(from, 1)[0]);\r\n    return data;\r\n};\n\nfunction prepend(data, value) {\r\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\r\n}\n\nfunction removeAtIndexes(data, indexes) {\r\n    let i = 0;\r\n    const temp = [...data];\r\n    for (const index of indexes) {\r\n        temp.splice(index - i, 1);\r\n        i++;\r\n    }\r\n    return compact(temp).length ? temp : [];\r\n}\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\r\n    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\r\n};\n\nfunction baseGet(object, updatePath) {\r\n    const length = updatePath.slice(0, -1).length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return object;\r\n}\r\nfunction isEmptyArray(obj) {\r\n    for (const key in obj) {\r\n        if (!isUndefined(obj[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction unset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : stringToPath(path);\r\n    const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    let previousObjRef;\r\n    if (childObject) {\r\n        delete childObject[key];\r\n    }\r\n    for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n        let index = -1;\r\n        let objectRef;\r\n        const currentPaths = updatePath.slice(0, -(k + 1));\r\n        const currentPathsLength = currentPaths.length - 1;\r\n        if (k > 0) {\r\n            previousObjRef = object;\r\n        }\r\n        while (++index < currentPaths.length) {\r\n            const item = currentPaths[index];\r\n            objectRef = objectRef ? objectRef[item] : object[item];\r\n            if (currentPathsLength === index &&\r\n                ((isObject(objectRef) && isEmptyObject(objectRef)) ||\r\n                    (Array.isArray(objectRef) && isEmptyArray(objectRef)))) {\r\n                previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n            }\r\n            previousObjRef = objectRef;\r\n        }\r\n    }\r\n    return object;\r\n}\n\nvar updateAt = (fieldValues, index, value) => {\r\n    fieldValues[index] = value;\r\n    return fieldValues;\r\n};\n\n/**\r\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\r\n *\r\n * @param props - useFieldArray props\r\n *\r\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\r\n *     defaultValues: {\r\n *       test: []\r\n *     }\r\n *   });\r\n *   const { fields, append } = useFieldArray({\r\n *     control,\r\n *     name: \"test\"\r\n *   });\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\r\n *       {fields.map((item, index) => (\r\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\r\n *       ))}\r\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\r\n *         append\r\n *       </button>\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useFieldArray(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\r\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\r\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\r\n    const _fieldIds = React.useRef(fields);\r\n    const _name = React.useRef(name);\r\n    const _actioned = React.useRef(false);\r\n    _name.current = name;\r\n    _fieldIds.current = fields;\r\n    control._names.array.add(name);\r\n    props.rules &&\r\n        control.register(name, props.rules);\r\n    const callback = React.useCallback(({ values, name: fieldArrayName, }) => {\r\n        if (fieldArrayName === _name.current || !fieldArrayName) {\r\n            const fieldValues = get(values, _name.current);\r\n            if (Array.isArray(fieldValues)) {\r\n                setFields(fieldValues);\r\n                ids.current = fieldValues.map(generateId);\r\n            }\r\n        }\r\n    }, []);\r\n    useSubscribe({\r\n        callback,\r\n        subject: control._subjects.array,\r\n    });\r\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\r\n        _actioned.current = true;\r\n        control._updateFieldArray(name, updatedFieldArrayValues);\r\n    }, [control, name]);\r\n    const append$1 = (value, options) => {\r\n        const appendValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);\r\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\r\n        ids.current = append(ids.current, appendValue.map(generateId));\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, append, {\r\n            argA: fillEmptyArray(value),\r\n        });\r\n    };\r\n    const prepend$1 = (value, options) => {\r\n        const prependValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);\r\n        control._names.focus = getFocusFieldName(name, 0, options);\r\n        ids.current = prepend(ids.current, prependValue.map(generateId));\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, prepend, {\r\n            argA: fillEmptyArray(value),\r\n        });\r\n    };\r\n    const remove = (index) => {\r\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\r\n        ids.current = removeArrayAt(ids.current, index);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\r\n            argA: index,\r\n        });\r\n    };\r\n    const insert$1 = (index, value, options) => {\r\n        const insertValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\r\n        control._names.focus = getFocusFieldName(name, index, options);\r\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\r\n            argA: index,\r\n            argB: fillEmptyArray(value),\r\n        });\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        const updatedFieldArrayValues = control._getFieldArray(name);\r\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\r\n        swapArrayAt(ids.current, indexA, indexB);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\r\n            argA: indexA,\r\n            argB: indexB,\r\n        }, false);\r\n    };\r\n    const move = (from, to) => {\r\n        const updatedFieldArrayValues = control._getFieldArray(name);\r\n        moveArrayAt(updatedFieldArrayValues, from, to);\r\n        moveArrayAt(ids.current, from, to);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\r\n            argA: from,\r\n            argB: to,\r\n        }, false);\r\n    };\r\n    const update = (index, value) => {\r\n        const updateValue = cloneObject(value);\r\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\r\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields([...updatedFieldArrayValues]);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\r\n            argA: index,\r\n            argB: updateValue,\r\n        }, true, false);\r\n    };\r\n    const replace = (value) => {\r\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\r\n        ids.current = updatedFieldArrayValues.map(generateId);\r\n        updateValues([...updatedFieldArrayValues]);\r\n        setFields([...updatedFieldArrayValues]);\r\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\r\n    };\r\n    React.useEffect(() => {\r\n        control._stateFlags.action = false;\r\n        isWatched(name, control._names) && control._subjects.state.next({});\r\n        if (_actioned.current &&\r\n            (!getValidationModes(control._options.mode).isOnSubmit ||\r\n                control._formState.isSubmitted)) {\r\n            if (control._options.resolver) {\r\n                control._executeSchema([name]).then((result) => {\r\n                    const error = get(result.errors, name);\r\n                    const existingError = get(control._formState.errors, name);\r\n                    if (existingError ? !error && existingError.type : error && error.type) {\r\n                        error\r\n                            ? set(control._formState.errors, name, error)\r\n                            : unset(control._formState.errors, name);\r\n                        control._subjects.state.next({\r\n                            errors: control._formState.errors,\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                const field = get(control._fields, name);\r\n                if (field && field._f) {\r\n                    validateField(field, get(control._formValues, name), control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\r\n                        control._subjects.state.next({\r\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\r\n                        }));\r\n                }\r\n            }\r\n        }\r\n        control._subjects.watch.next({\r\n            name,\r\n            values: control._formValues,\r\n        });\r\n        control._names.focus &&\r\n            focusFieldBy(control._fields, (key) => !!key && key.startsWith(control._names.focus || ''));\r\n        control._names.focus = '';\r\n        control._proxyFormState.isValid && control._updateValid();\r\n    }, [fields, name, control]);\r\n    React.useEffect(() => {\r\n        !get(control._formValues, name) && control._updateFieldArray(name);\r\n        return () => {\r\n            (control._options.shouldUnregister || shouldUnregister) &&\r\n                control.unregister(name);\r\n        };\r\n    }, [name, control, keyName, shouldUnregister]);\r\n    return {\r\n        swap: React.useCallback(swap, [updateValues, name, control]),\r\n        move: React.useCallback(move, [updateValues, name, control]),\r\n        prepend: React.useCallback(prepend$1, [updateValues, name, control]),\r\n        append: React.useCallback(append$1, [updateValues, name, control]),\r\n        remove: React.useCallback(remove, [updateValues, name, control]),\r\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\r\n        update: React.useCallback(update, [updateValues, name, control]),\r\n        replace: React.useCallback(replace, [updateValues, name, control]),\r\n        fields: React.useMemo(() => fields.map((field, index) => ({\r\n            ...field,\r\n            [keyName]: ids.current[index] || generateId(),\r\n        })), [fields, keyName]),\r\n    };\r\n}\n\nfunction createSubject() {\r\n    let _observers = [];\r\n    const next = (value) => {\r\n        for (const observer of _observers) {\r\n            observer.next(value);\r\n        }\r\n    };\r\n    const subscribe = (observer) => {\r\n        _observers.push(observer);\r\n        return {\r\n            unsubscribe: () => {\r\n                _observers = _observers.filter((o) => o !== observer);\r\n            },\r\n        };\r\n    };\r\n    const unsubscribe = () => {\r\n        _observers = [];\r\n    };\r\n    return {\r\n        get observers() {\r\n            return _observers;\r\n        },\r\n        next,\r\n        subscribe,\r\n        unsubscribe,\r\n    };\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\r\n    if (isPrimitive(object1) || isPrimitive(object2)) {\r\n        return object1 === object2;\r\n    }\r\n    if (isDateObject(object1) && isDateObject(object2)) {\r\n        return object1.getTime() === object2.getTime();\r\n    }\r\n    const keys1 = Object.keys(object1);\r\n    const keys2 = Object.keys(object2);\r\n    if (keys1.length !== keys2.length) {\r\n        return false;\r\n    }\r\n    for (const key of keys1) {\r\n        const val1 = object1[key];\r\n        if (!keys2.includes(key)) {\r\n            return false;\r\n        }\r\n        if (key !== 'ref') {\r\n            const val2 = object2[key];\r\n            if ((isDateObject(val1) && isDateObject(val2)) ||\r\n                (isObject(val1) && isObject(val2)) ||\r\n                (Array.isArray(val1) && Array.isArray(val2))\r\n                ? !deepEqual(val1, val2)\r\n                : val1 !== val2) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\n\nvar isHTMLElement = (value) => {\r\n    const owner = value ? value.ownerDocument : 0;\r\n    const ElementClass = owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement;\r\n    return value instanceof ElementClass;\r\n};\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\r\n    for (const key in data) {\r\n        if (isFunction(data[key])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nfunction markFieldsDirty(data, fields = {}) {\r\n    const isParentNodeArray = Array.isArray(data);\r\n    if (isObject(data) || isParentNodeArray) {\r\n        for (const key in data) {\r\n            if (Array.isArray(data[key]) ||\r\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\r\n                fields[key] = Array.isArray(data[key]) ? [] : {};\r\n                markFieldsDirty(data[key], fields[key]);\r\n            }\r\n            else if (!isNullOrUndefined(data[key])) {\r\n                fields[key] = true;\r\n            }\r\n        }\r\n    }\r\n    return fields;\r\n}\r\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\r\n    const isParentNodeArray = Array.isArray(data);\r\n    if (isObject(data) || isParentNodeArray) {\r\n        for (const key in data) {\r\n            if (Array.isArray(data[key]) ||\r\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\r\n                if (isUndefined(formValues) ||\r\n                    isPrimitive(dirtyFieldsFromValues[key])) {\r\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\r\n                        ? markFieldsDirty(data[key], [])\r\n                        : { ...markFieldsDirty(data[key]) };\r\n                }\r\n                else {\r\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\r\n                }\r\n            }\r\n            else {\r\n                deepEqual(data[key], formValues[key])\r\n                    ? delete dirtyFieldsFromValues[key]\r\n                    : (dirtyFieldsFromValues[key] = true);\r\n            }\r\n        }\r\n    }\r\n    return dirtyFieldsFromValues;\r\n}\r\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\r\n    ? value\r\n    : valueAsNumber\r\n        ? value === ''\r\n            ? NaN\r\n            : value\r\n                ? +value\r\n                : value\r\n        : valueAsDate && isString(value)\r\n            ? new Date(value)\r\n            : setValueAs\r\n                ? setValueAs(value)\r\n                : value;\n\nfunction getFieldValue(_f) {\r\n    const ref = _f.ref;\r\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\r\n        return;\r\n    }\r\n    if (isFileInput(ref)) {\r\n        return ref.files;\r\n    }\r\n    if (isRadioInput(ref)) {\r\n        return getRadioValue(_f.refs).value;\r\n    }\r\n    if (isMultipleSelect(ref)) {\r\n        return [...ref.selectedOptions].map(({ value }) => value);\r\n    }\r\n    if (isCheckBoxInput(ref)) {\r\n        return getCheckboxValue(_f.refs).value;\r\n    }\r\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\r\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\r\n    const fields = {};\r\n    for (const name of fieldsNames) {\r\n        const field = get(_fields, name);\r\n        field && set(fields, name, field._f);\r\n    }\r\n    return {\r\n        criteriaMode,\r\n        names: [...fieldsNames],\r\n        fields,\r\n        shouldUseNativeValidation,\r\n    };\r\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\r\n    ? rule\r\n    : isRegex(rule)\r\n        ? rule.source\r\n        : isObject(rule)\r\n            ? isRegex(rule.value)\r\n                ? rule.value.source\r\n                : rule.value\r\n            : rule;\n\nvar hasValidation = (options) => options.mount &&\r\n    (options.required ||\r\n        options.min ||\r\n        options.max ||\r\n        options.maxLength ||\r\n        options.minLength ||\r\n        options.pattern ||\r\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\r\n    const error = get(errors, name);\r\n    if (error || isKey(name)) {\r\n        return {\r\n            error,\r\n            name,\r\n        };\r\n    }\r\n    const names = name.split('.');\r\n    while (names.length) {\r\n        const fieldName = names.join('.');\r\n        const field = get(_fields, fieldName);\r\n        const foundError = get(errors, fieldName);\r\n        if (field && !Array.isArray(field) && name !== fieldName) {\r\n            return { name };\r\n        }\r\n        if (foundError && foundError.type) {\r\n            return {\r\n                name: fieldName,\r\n                error: foundError,\r\n            };\r\n        }\r\n        names.pop();\r\n    }\r\n    return {\r\n        name,\r\n    };\r\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\r\n    if (mode.isOnAll) {\r\n        return false;\r\n    }\r\n    else if (!isSubmitted && mode.isOnTouch) {\r\n        return !(isTouched || isBlurEvent);\r\n    }\r\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\r\n        return !isBlurEvent;\r\n    }\r\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\r\n        return isBlurEvent;\r\n    }\r\n    return true;\r\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\r\n    mode: VALIDATION_MODE.onSubmit,\r\n    reValidateMode: VALIDATION_MODE.onChange,\r\n    shouldFocusError: true,\r\n};\r\nfunction createFormControl(props = {}) {\r\n    let _options = {\r\n        ...defaultOptions,\r\n        ...props,\r\n    };\r\n    let _formState = {\r\n        submitCount: 0,\r\n        isDirty: false,\r\n        isValidating: false,\r\n        isSubmitted: false,\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: false,\r\n        touchedFields: {},\r\n        dirtyFields: {},\r\n        errors: {},\r\n    };\r\n    let _fields = {};\r\n    let _defaultValues = cloneObject(_options.defaultValues) || {};\r\n    let _formValues = _options.shouldUnregister\r\n        ? {}\r\n        : cloneObject(_defaultValues);\r\n    let _stateFlags = {\r\n        action: false,\r\n        mount: false,\r\n        watch: false,\r\n    };\r\n    let _names = {\r\n        mount: new Set(),\r\n        unMount: new Set(),\r\n        array: new Set(),\r\n        watch: new Set(),\r\n    };\r\n    let delayErrorCallback;\r\n    let timer = 0;\r\n    const _proxyFormState = {\r\n        isDirty: false,\r\n        dirtyFields: false,\r\n        touchedFields: false,\r\n        isValidating: false,\r\n        isValid: false,\r\n        errors: false,\r\n    };\r\n    const _subjects = {\r\n        watch: createSubject(),\r\n        array: createSubject(),\r\n        state: createSubject(),\r\n    };\r\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\r\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\r\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\r\n    const debounce = (callback) => (wait) => {\r\n        clearTimeout(timer);\r\n        timer = window.setTimeout(callback, wait);\r\n    };\r\n    const _updateValid = async () => {\r\n        if (_proxyFormState.isValid) {\r\n            const isValid = _options.resolver\r\n                ? isEmptyObject((await _executeSchema()).errors)\r\n                : await executeBuiltInValidation(_fields, true);\r\n            if (isValid !== _formState.isValid) {\r\n                _formState.isValid = isValid;\r\n                _subjects.state.next({\r\n                    isValid,\r\n                });\r\n            }\r\n        }\r\n    };\r\n    const _updateIsValidating = (value) => _proxyFormState.isValidating &&\r\n        value !== _formState.isValidating &&\r\n        _subjects.state.next({\r\n            isValidating: value,\r\n        });\r\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\r\n        if (args && method) {\r\n            _stateFlags.action = true;\r\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\r\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\r\n                shouldSetValues && set(_fields, name, fieldValues);\r\n            }\r\n            if (shouldUpdateFieldsAndState &&\r\n                Array.isArray(get(_formState.errors, name))) {\r\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\r\n                shouldSetValues && set(_formState.errors, name, errors);\r\n                unsetEmptyArray(_formState.errors, name);\r\n            }\r\n            if (_proxyFormState.touchedFields &&\r\n                shouldUpdateFieldsAndState &&\r\n                Array.isArray(get(_formState.touchedFields, name))) {\r\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\r\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\r\n            }\r\n            if (_proxyFormState.dirtyFields) {\r\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\r\n            }\r\n            _subjects.state.next({\r\n                name,\r\n                isDirty: _getDirty(name, values),\r\n                dirtyFields: _formState.dirtyFields,\r\n                errors: _formState.errors,\r\n                isValid: _formState.isValid,\r\n            });\r\n        }\r\n        else {\r\n            set(_formValues, name, values);\r\n        }\r\n    };\r\n    const updateErrors = (name, error) => {\r\n        set(_formState.errors, name, error);\r\n        _subjects.state.next({\r\n            errors: _formState.errors,\r\n        });\r\n    };\r\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\r\n        const field = get(_fields, name);\r\n        if (field) {\r\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\r\n            isUndefined(defaultValue) ||\r\n                (ref && ref.defaultChecked) ||\r\n                shouldSkipSetValueAs\r\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\r\n                : setFieldValue(name, defaultValue);\r\n            _stateFlags.mount && _updateValid();\r\n        }\r\n    };\r\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\r\n        let shouldUpdateField = false;\r\n        let isPreviousDirty = false;\r\n        const output = {\r\n            name,\r\n        };\r\n        if (!isBlurEvent || shouldDirty) {\r\n            if (_proxyFormState.isDirty) {\r\n                isPreviousDirty = _formState.isDirty;\r\n                _formState.isDirty = output.isDirty = _getDirty();\r\n                shouldUpdateField = isPreviousDirty !== output.isDirty;\r\n            }\r\n            if (_proxyFormState.dirtyFields) {\r\n                isPreviousDirty = get(_formState.dirtyFields, name);\r\n                const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\r\n                isCurrentFieldPristine\r\n                    ? unset(_formState.dirtyFields, name)\r\n                    : set(_formState.dirtyFields, name, true);\r\n                output.dirtyFields = _formState.dirtyFields;\r\n                shouldUpdateField =\r\n                    shouldUpdateField || isPreviousDirty !== !isCurrentFieldPristine;\r\n            }\r\n        }\r\n        if (isBlurEvent) {\r\n            const isPreviousFieldTouched = get(_formState.touchedFields, name);\r\n            if (!isPreviousFieldTouched) {\r\n                set(_formState.touchedFields, name, isBlurEvent);\r\n                output.touchedFields = _formState.touchedFields;\r\n                shouldUpdateField =\r\n                    shouldUpdateField ||\r\n                        (_proxyFormState.touchedFields &&\r\n                            isPreviousFieldTouched !== isBlurEvent);\r\n            }\r\n        }\r\n        shouldUpdateField && shouldRender && _subjects.state.next(output);\r\n        return shouldUpdateField ? output : {};\r\n    };\r\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\r\n        const previousFieldError = get(_formState.errors, name);\r\n        const shouldUpdateValid = _proxyFormState.isValid &&\r\n            isBoolean(isValid) &&\r\n            _formState.isValid !== isValid;\r\n        if (props.delayError && error) {\r\n            delayErrorCallback = debounce(() => updateErrors(name, error));\r\n            delayErrorCallback(props.delayError);\r\n        }\r\n        else {\r\n            clearTimeout(timer);\r\n            delayErrorCallback = null;\r\n            error\r\n                ? set(_formState.errors, name, error)\r\n                : unset(_formState.errors, name);\r\n        }\r\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\r\n            !isEmptyObject(fieldState) ||\r\n            shouldUpdateValid) {\r\n            const updatedFormState = {\r\n                ...fieldState,\r\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\r\n                errors: _formState.errors,\r\n                name,\r\n            };\r\n            _formState = {\r\n                ..._formState,\r\n                ...updatedFormState,\r\n            };\r\n            _subjects.state.next(updatedFormState);\r\n        }\r\n        _updateIsValidating(false);\r\n    };\r\n    const _executeSchema = async (name) => await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\r\n    const executeSchemaAndUpdateState = async (names) => {\r\n        const { errors } = await _executeSchema();\r\n        if (names) {\r\n            for (const name of names) {\r\n                const error = get(errors, name);\r\n                error\r\n                    ? set(_formState.errors, name, error)\r\n                    : unset(_formState.errors, name);\r\n            }\r\n        }\r\n        else {\r\n            _formState.errors = errors;\r\n        }\r\n        return errors;\r\n    };\r\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\r\n        valid: true,\r\n    }) => {\r\n        for (const name in fields) {\r\n            const field = fields[name];\r\n            if (field) {\r\n                const { _f, ...fieldValue } = field;\r\n                if (_f) {\r\n                    const isFieldArrayRoot = _names.array.has(_f.name);\r\n                    const fieldError = await validateField(field, get(_formValues, _f.name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation, isFieldArrayRoot);\r\n                    if (fieldError[_f.name]) {\r\n                        context.valid = false;\r\n                        if (shouldOnlyCheckValid) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    !shouldOnlyCheckValid &&\r\n                        (get(fieldError, _f.name)\r\n                            ? isFieldArrayRoot\r\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\r\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\r\n                            : unset(_formState.errors, _f.name));\r\n                }\r\n                fieldValue &&\r\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\r\n            }\r\n        }\r\n        return context.valid;\r\n    };\r\n    const _removeUnmounted = () => {\r\n        for (const name of _names.unMount) {\r\n            const field = get(_fields, name);\r\n            field &&\r\n                (field._f.refs\r\n                    ? field._f.refs.every((ref) => !live(ref))\r\n                    : !live(field._f.ref)) &&\r\n                unregister(name);\r\n        }\r\n        _names.unMount = new Set();\r\n    };\r\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\r\n        !deepEqual(getValues(), _defaultValues));\r\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\r\n        ...(_stateFlags.mount\r\n            ? _formValues\r\n            : isUndefined(defaultValue)\r\n                ? _defaultValues\r\n                : isString(names)\r\n                    ? { [names]: defaultValue }\r\n                    : defaultValue),\r\n    }, isGlobal);\r\n    const _getFieldArray = (name) => compact(get(_stateFlags.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\r\n    const setFieldValue = (name, value, options = {}) => {\r\n        const field = get(_fields, name);\r\n        let fieldValue = value;\r\n        if (field) {\r\n            const fieldReference = field._f;\r\n            if (fieldReference) {\r\n                !fieldReference.disabled &&\r\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\r\n                fieldValue =\r\n                    isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\r\n                        ? ''\r\n                        : value;\r\n                if (isMultipleSelect(fieldReference.ref)) {\r\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\r\n                }\r\n                else if (fieldReference.refs) {\r\n                    if (isCheckBoxInput(fieldReference.ref)) {\r\n                        fieldReference.refs.length > 1\r\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\r\n                                (checkboxRef.checked = Array.isArray(fieldValue)\r\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\r\n                                    : fieldValue === checkboxRef.value))\r\n                            : fieldReference.refs[0] &&\r\n                                (fieldReference.refs[0].checked = !!fieldValue);\r\n                    }\r\n                    else {\r\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\r\n                    }\r\n                }\r\n                else if (isFileInput(fieldReference.ref)) {\r\n                    fieldReference.ref.value = '';\r\n                }\r\n                else {\r\n                    fieldReference.ref.value = fieldValue;\r\n                    if (!fieldReference.ref.type) {\r\n                        _subjects.watch.next({\r\n                            name,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        (options.shouldDirty || options.shouldTouch) &&\r\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\r\n        options.shouldValidate && trigger(name);\r\n    };\r\n    const setValues = (name, value, options) => {\r\n        for (const fieldKey in value) {\r\n            const fieldValue = value[fieldKey];\r\n            const fieldName = `${name}.${fieldKey}`;\r\n            const field = get(_fields, fieldName);\r\n            (_names.array.has(name) ||\r\n                !isPrimitive(fieldValue) ||\r\n                (field && !field._f)) &&\r\n                !isDateObject(fieldValue)\r\n                ? setValues(fieldName, fieldValue, options)\r\n                : setFieldValue(fieldName, fieldValue, options);\r\n        }\r\n    };\r\n    const setValue = (name, value, options = {}) => {\r\n        const field = get(_fields, name);\r\n        const isFieldArray = _names.array.has(name);\r\n        const cloneValue = cloneObject(value);\r\n        set(_formValues, name, cloneValue);\r\n        if (isFieldArray) {\r\n            _subjects.array.next({\r\n                name,\r\n                values: _formValues,\r\n            });\r\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\r\n                options.shouldDirty) {\r\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\r\n                _subjects.state.next({\r\n                    name,\r\n                    dirtyFields: _formState.dirtyFields,\r\n                    isDirty: _getDirty(name, cloneValue),\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            field && !field._f && !isNullOrUndefined(cloneValue)\r\n                ? setValues(name, cloneValue, options)\r\n                : setFieldValue(name, cloneValue, options);\r\n        }\r\n        isWatched(name, _names) && _subjects.state.next({});\r\n        _subjects.watch.next({\r\n            name,\r\n        });\r\n    };\r\n    const onChange = async (event) => {\r\n        const target = event.target;\r\n        let name = target.name;\r\n        const field = get(_fields, name);\r\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\r\n        if (field) {\r\n            let error;\r\n            let isValid;\r\n            const fieldValue = getCurrentFieldValue();\r\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\r\n            const shouldSkipValidation = (!hasValidation(field._f) &&\r\n                !_options.resolver &&\r\n                !get(_formState.errors, name) &&\r\n                !field._f.deps) ||\r\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\r\n            const watched = isWatched(name, _names, isBlurEvent);\r\n            set(_formValues, name, fieldValue);\r\n            if (isBlurEvent) {\r\n                field._f.onBlur && field._f.onBlur(event);\r\n                delayErrorCallback && delayErrorCallback(0);\r\n            }\r\n            else if (field._f.onChange) {\r\n                field._f.onChange(event);\r\n            }\r\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\r\n            const shouldRender = !isEmptyObject(fieldState) || watched;\r\n            !isBlurEvent &&\r\n                _subjects.watch.next({\r\n                    name,\r\n                    type: event.type,\r\n                });\r\n            if (shouldSkipValidation) {\r\n                _proxyFormState.isValid && _updateValid();\r\n                return (shouldRender &&\r\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\r\n            }\r\n            !isBlurEvent && watched && _subjects.state.next({});\r\n            _updateIsValidating(true);\r\n            if (_options.resolver) {\r\n                const { errors } = await _executeSchema([name]);\r\n                const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\r\n                const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\r\n                error = errorLookupResult.error;\r\n                name = errorLookupResult.name;\r\n                isValid = isEmptyObject(errors);\r\n            }\r\n            else {\r\n                error = (await validateField(field, get(_formValues, name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\r\n                if (error) {\r\n                    isValid = false;\r\n                }\r\n                else if (_proxyFormState.isValid) {\r\n                    isValid = await executeBuiltInValidation(_fields, true);\r\n                }\r\n            }\r\n            if (!isPrimitive(fieldValue) || getCurrentFieldValue() === fieldValue) {\r\n                field._f.deps &&\r\n                    trigger(field._f.deps);\r\n                shouldRenderByError(name, isValid, error, fieldState);\r\n            }\r\n            else {\r\n                _updateIsValidating(false);\r\n            }\r\n        }\r\n    };\r\n    const trigger = async (name, options = {}) => {\r\n        let isValid;\r\n        let validationResult;\r\n        const fieldNames = convertToArrayPayload(name);\r\n        _updateIsValidating(true);\r\n        if (_options.resolver) {\r\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\r\n            isValid = isEmptyObject(errors);\r\n            validationResult = name\r\n                ? !fieldNames.some((name) => get(errors, name))\r\n                : isValid;\r\n        }\r\n        else if (name) {\r\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\r\n                const field = get(_fields, fieldName);\r\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\r\n            }))).every(Boolean);\r\n            !(!validationResult && !_formState.isValid) && _updateValid();\r\n        }\r\n        else {\r\n            validationResult = isValid = await executeBuiltInValidation(_fields);\r\n        }\r\n        _subjects.state.next({\r\n            ...(!isString(name) ||\r\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\r\n                ? {}\r\n                : { name }),\r\n            ...(_options.resolver || !name ? { isValid } : {}),\r\n            errors: _formState.errors,\r\n            isValidating: false,\r\n        });\r\n        options.shouldFocus &&\r\n            !validationResult &&\r\n            focusFieldBy(_fields, (key) => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\r\n        return validationResult;\r\n    };\r\n    const getValues = (fieldNames) => {\r\n        const values = {\r\n            ..._defaultValues,\r\n            ...(_stateFlags.mount ? _formValues : {}),\r\n        };\r\n        return isUndefined(fieldNames)\r\n            ? values\r\n            : isString(fieldNames)\r\n                ? get(values, fieldNames)\r\n                : fieldNames.map((name) => get(values, name));\r\n    };\r\n    const getFieldState = (name, formState) => ({\r\n        invalid: !!get((formState || _formState).errors, name),\r\n        isDirty: !!get((formState || _formState).dirtyFields, name),\r\n        isTouched: !!get((formState || _formState).touchedFields, name),\r\n        error: get((formState || _formState).errors, name),\r\n    });\r\n    const clearErrors = (name) => {\r\n        name\r\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\r\n            : (_formState.errors = {});\r\n        _subjects.state.next({\r\n            errors: _formState.errors,\r\n        });\r\n    };\r\n    const setError = (name, error, options) => {\r\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\r\n        set(_formState.errors, name, {\r\n            ...error,\r\n            ref,\r\n        });\r\n        _subjects.state.next({\r\n            name,\r\n            errors: _formState.errors,\r\n            isValid: false,\r\n        });\r\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\r\n    };\r\n    const watch = (name, defaultValue) => isFunction(name)\r\n        ? _subjects.watch.subscribe({\r\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\r\n        })\r\n        : _getWatch(name, defaultValue, true);\r\n    const unregister = (name, options = {}) => {\r\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\r\n            _names.mount.delete(fieldName);\r\n            _names.array.delete(fieldName);\r\n            if (get(_fields, fieldName)) {\r\n                if (!options.keepValue) {\r\n                    unset(_fields, fieldName);\r\n                    unset(_formValues, fieldName);\r\n                }\r\n                !options.keepError && unset(_formState.errors, fieldName);\r\n                !options.keepDirty && unset(_formState.dirtyFields, fieldName);\r\n                !options.keepTouched && unset(_formState.touchedFields, fieldName);\r\n                !_options.shouldUnregister &&\r\n                    !options.keepDefaultValue &&\r\n                    unset(_defaultValues, fieldName);\r\n            }\r\n        }\r\n        _subjects.watch.next({});\r\n        _subjects.state.next({\r\n            ..._formState,\r\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\r\n        });\r\n        !options.keepIsValid && _updateValid();\r\n    };\r\n    const register = (name, options = {}) => {\r\n        let field = get(_fields, name);\r\n        const disabledIsDefined = isBoolean(options.disabled);\r\n        set(_fields, name, {\r\n            ...(field || {}),\r\n            _f: {\r\n                ...(field && field._f ? field._f : { ref: { name } }),\r\n                name,\r\n                mount: true,\r\n                ...options,\r\n            },\r\n        });\r\n        _names.mount.add(name);\r\n        field\r\n            ? disabledIsDefined &&\r\n                set(_formValues, name, options.disabled\r\n                    ? undefined\r\n                    : get(_formValues, name, getFieldValue(field._f)))\r\n            : updateValidAndValue(name, true, options.value);\r\n        return {\r\n            ...(disabledIsDefined ? { disabled: options.disabled } : {}),\r\n            ...(_options.shouldUseNativeValidation\r\n                ? {\r\n                    required: !!options.required,\r\n                    min: getRuleValue(options.min),\r\n                    max: getRuleValue(options.max),\r\n                    minLength: getRuleValue(options.minLength),\r\n                    maxLength: getRuleValue(options.maxLength),\r\n                    pattern: getRuleValue(options.pattern),\r\n                }\r\n                : {}),\r\n            name,\r\n            onChange,\r\n            onBlur: onChange,\r\n            ref: (ref) => {\r\n                if (ref) {\r\n                    register(name, options);\r\n                    field = get(_fields, name);\r\n                    const fieldRef = isUndefined(ref.value)\r\n                        ? ref.querySelectorAll\r\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\r\n                            : ref\r\n                        : ref;\r\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\r\n                    const refs = field._f.refs || [];\r\n                    if (radioOrCheckbox\r\n                        ? refs.find((option) => option === fieldRef)\r\n                        : fieldRef === field._f.ref) {\r\n                        return;\r\n                    }\r\n                    set(_fields, name, {\r\n                        _f: {\r\n                            ...field._f,\r\n                            ...(radioOrCheckbox\r\n                                ? {\r\n                                    refs: [\r\n                                        ...refs.filter(live),\r\n                                        fieldRef,\r\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\r\n                                    ],\r\n                                    ref: { type: fieldRef.type, name },\r\n                                }\r\n                                : { ref: fieldRef }),\r\n                        },\r\n                    });\r\n                    updateValidAndValue(name, false, undefined, fieldRef);\r\n                }\r\n                else {\r\n                    field = get(_fields, name, {});\r\n                    if (field._f) {\r\n                        field._f.mount = false;\r\n                    }\r\n                    (_options.shouldUnregister || options.shouldUnregister) &&\r\n                        !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\r\n                        _names.unMount.add(name);\r\n                }\r\n            },\r\n        };\r\n    };\r\n    const _focusError = () => _options.shouldFocusError &&\r\n        focusFieldBy(_fields, (key) => key && get(_formState.errors, key), _names.mount);\r\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\r\n        if (e) {\r\n            e.preventDefault && e.preventDefault();\r\n            e.persist && e.persist();\r\n        }\r\n        let hasNoPromiseError = true;\r\n        let fieldValues = cloneObject(_formValues);\r\n        _subjects.state.next({\r\n            isSubmitting: true,\r\n        });\r\n        try {\r\n            if (_options.resolver) {\r\n                const { errors, values } = await _executeSchema();\r\n                _formState.errors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                await executeBuiltInValidation(_fields);\r\n            }\r\n            if (isEmptyObject(_formState.errors)) {\r\n                _subjects.state.next({\r\n                    errors: {},\r\n                    isSubmitting: true,\r\n                });\r\n                await onValid(fieldValues, e);\r\n            }\r\n            else {\r\n                if (onInvalid) {\r\n                    await onInvalid({ ..._formState.errors }, e);\r\n                }\r\n                _focusError();\r\n            }\r\n        }\r\n        catch (err) {\r\n            hasNoPromiseError = false;\r\n            throw err;\r\n        }\r\n        finally {\r\n            _formState.isSubmitted = true;\r\n            _subjects.state.next({\r\n                isSubmitted: true,\r\n                isSubmitting: false,\r\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\r\n                submitCount: _formState.submitCount + 1,\r\n                errors: _formState.errors,\r\n            });\r\n        }\r\n    };\r\n    const resetField = (name, options = {}) => {\r\n        if (get(_fields, name)) {\r\n            if (isUndefined(options.defaultValue)) {\r\n                setValue(name, get(_defaultValues, name));\r\n            }\r\n            else {\r\n                setValue(name, options.defaultValue);\r\n                set(_defaultValues, name, options.defaultValue);\r\n            }\r\n            if (!options.keepTouched) {\r\n                unset(_formState.touchedFields, name);\r\n            }\r\n            if (!options.keepDirty) {\r\n                unset(_formState.dirtyFields, name);\r\n                _formState.isDirty = options.defaultValue\r\n                    ? _getDirty(name, get(_defaultValues, name))\r\n                    : _getDirty();\r\n            }\r\n            if (!options.keepError) {\r\n                unset(_formState.errors, name);\r\n                _proxyFormState.isValid && _updateValid();\r\n            }\r\n            _subjects.state.next({ ..._formState });\r\n        }\r\n    };\r\n    const _reset = (formValues, keepStateOptions = {}) => {\r\n        const updatedValues = formValues || _defaultValues;\r\n        const cloneUpdatedValues = cloneObject(updatedValues);\r\n        const values = formValues && !isEmptyObject(formValues)\r\n            ? cloneUpdatedValues\r\n            : _defaultValues;\r\n        if (!keepStateOptions.keepDefaultValues) {\r\n            _defaultValues = updatedValues;\r\n        }\r\n        if (!keepStateOptions.keepValues) {\r\n            if (keepStateOptions.keepDirtyValues) {\r\n                for (const fieldName of _names.mount) {\r\n                    get(_formState.dirtyFields, fieldName)\r\n                        ? set(values, fieldName, get(_formValues, fieldName))\r\n                        : setValue(fieldName, get(values, fieldName));\r\n                }\r\n            }\r\n            else {\r\n                if (isWeb && isUndefined(formValues)) {\r\n                    for (const name of _names.mount) {\r\n                        const field = get(_fields, name);\r\n                        if (field && field._f) {\r\n                            const fieldReference = Array.isArray(field._f.refs)\r\n                                ? field._f.refs[0]\r\n                                : field._f.ref;\r\n                            if (isHTMLElement(fieldReference)) {\r\n                                const form = fieldReference.closest('form');\r\n                                if (form) {\r\n                                    form.reset();\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                _fields = {};\r\n            }\r\n            _formValues = props.shouldUnregister\r\n                ? keepStateOptions.keepDefaultValues\r\n                    ? cloneObject(_defaultValues)\r\n                    : {}\r\n                : cloneUpdatedValues;\r\n            _subjects.array.next({\r\n                values,\r\n            });\r\n            _subjects.watch.next({\r\n                values,\r\n            });\r\n        }\r\n        _names = {\r\n            mount: new Set(),\r\n            unMount: new Set(),\r\n            array: new Set(),\r\n            watch: new Set(),\r\n            watchAll: false,\r\n            focus: '',\r\n        };\r\n        _stateFlags.mount =\r\n            !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\r\n        _stateFlags.watch = !!props.shouldUnregister;\r\n        _subjects.state.next({\r\n            submitCount: keepStateOptions.keepSubmitCount\r\n                ? _formState.submitCount\r\n                : 0,\r\n            isDirty: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\r\n                ? _formState.isDirty\r\n                : !!(keepStateOptions.keepDefaultValues &&\r\n                    !deepEqual(formValues, _defaultValues)),\r\n            isSubmitted: keepStateOptions.keepIsSubmitted\r\n                ? _formState.isSubmitted\r\n                : false,\r\n            dirtyFields: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\r\n                ? _formState.dirtyFields\r\n                : keepStateOptions.keepDefaultValues && formValues\r\n                    ? getDirtyFields(_defaultValues, formValues)\r\n                    : {},\r\n            touchedFields: keepStateOptions.keepTouched\r\n                ? _formState.touchedFields\r\n                : {},\r\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\r\n            isSubmitting: false,\r\n            isSubmitSuccessful: false,\r\n        });\r\n    };\r\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\r\n        ? formValues(_formValues)\r\n        : formValues, keepStateOptions);\r\n    const setFocus = (name, options = {}) => {\r\n        const field = get(_fields, name);\r\n        const fieldReference = field && field._f;\r\n        if (fieldReference) {\r\n            const fieldRef = fieldReference.refs\r\n                ? fieldReference.refs[0]\r\n                : fieldReference.ref;\r\n            if (fieldRef.focus) {\r\n                fieldRef.focus();\r\n                options.shouldSelect && fieldRef.select();\r\n            }\r\n        }\r\n    };\r\n    return {\r\n        control: {\r\n            register,\r\n            unregister,\r\n            getFieldState,\r\n            _executeSchema,\r\n            _focusError,\r\n            _getWatch,\r\n            _getDirty,\r\n            _updateValid,\r\n            _removeUnmounted,\r\n            _updateFieldArray,\r\n            _getFieldArray,\r\n            _subjects,\r\n            _proxyFormState,\r\n            get _fields() {\r\n                return _fields;\r\n            },\r\n            get _formValues() {\r\n                return _formValues;\r\n            },\r\n            get _stateFlags() {\r\n                return _stateFlags;\r\n            },\r\n            set _stateFlags(value) {\r\n                _stateFlags = value;\r\n            },\r\n            get _defaultValues() {\r\n                return _defaultValues;\r\n            },\r\n            get _names() {\r\n                return _names;\r\n            },\r\n            set _names(value) {\r\n                _names = value;\r\n            },\r\n            get _formState() {\r\n                return _formState;\r\n            },\r\n            set _formState(value) {\r\n                _formState = value;\r\n            },\r\n            get _options() {\r\n                return _options;\r\n            },\r\n            set _options(value) {\r\n                _options = {\r\n                    ..._options,\r\n                    ...value,\r\n                };\r\n            },\r\n        },\r\n        trigger,\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        setValue,\r\n        getValues,\r\n        reset,\r\n        resetField,\r\n        clearErrors,\r\n        unregister,\r\n        setError,\r\n        setFocus,\r\n        getFieldState,\r\n    };\r\n}\n\n/**\r\n * Custom hook to manage the entire form.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\r\n *\r\n * @param props - form configuration and validation parameters.\r\n *\r\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   console.log(watch(\"example\"));\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input defaultValue=\"test\" {...register(\"example\")} />\r\n *       <input {...register(\"exampleRequired\", { required: true })} />\r\n *       {errors.exampleRequired && <span>This field is required</span>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useForm(props = {}) {\r\n    const _formControl = React.useRef();\r\n    const [formState, updateFormState] = React.useState({\r\n        isDirty: false,\r\n        isValidating: false,\r\n        isSubmitted: false,\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: false,\r\n        submitCount: 0,\r\n        dirtyFields: {},\r\n        touchedFields: {},\r\n        errors: {},\r\n        defaultValues: props.defaultValues,\r\n    });\r\n    if (!_formControl.current) {\r\n        _formControl.current = {\r\n            ...createFormControl(props),\r\n            formState,\r\n        };\r\n    }\r\n    const control = _formControl.current.control;\r\n    control._options = props;\r\n    useSubscribe({\r\n        subject: control._subjects.state,\r\n        callback: React.useCallback((value) => {\r\n            if (shouldRenderFormState(value, control._proxyFormState, true)) {\r\n                control._formState = {\r\n                    ...control._formState,\r\n                    ...value,\r\n                };\r\n                updateFormState({ ...control._formState });\r\n            }\r\n        }, [control]),\r\n    });\r\n    React.useEffect(() => {\r\n        if (!control._stateFlags.mount) {\r\n            control._proxyFormState.isValid && control._updateValid();\r\n            control._stateFlags.mount = true;\r\n        }\r\n        if (control._stateFlags.watch) {\r\n            control._stateFlags.watch = false;\r\n            control._subjects.state.next({});\r\n        }\r\n        control._removeUnmounted();\r\n    });\r\n    React.useEffect(() => {\r\n        formState.submitCount && control._focusError();\r\n    }, [control, formState.submitCount]);\r\n    _formControl.current.formState = getProxyFormState(formState, control);\r\n    return _formControl.current;\r\n}\n\nexport { Controller, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path as keyof T])\n      ? defaultValue\n      : obj[path as keyof T]\n    : result;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <TFieldValues extends FieldValues, TContext = any>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues, TContext = any>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  _proxyFormState: K,\n  isRoot?: boolean,\n) => {\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  exact && signalName\n    ? name === signalName\n    : !name ||\n      !signalName ||\n      name === signalName ||\n      convertToArrayPayload(name).some(\n        (currentName) =>\n          currentName &&\n          (currentName.startsWith(signalName) ||\n            signalName.startsWith(currentName)),\n      );\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  callback: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject.subscribe({\n        next: _props.current.callback,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _mounted = React.useRef(true);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    callback: React.useCallback(\n      (value: { name?: InternalFieldName }) =>\n        _mounted.current &&\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          value.name,\n          exact,\n        ) &&\n        shouldRenderFormState(value, _localProxyFormState.current) &&\n        updateFormState({\n          ...control._formState,\n          ...value,\n        }),\n      [control, exact],\n    ),\n    subject: control._subjects.state,\n  });\n\n  React.useEffect(() => {\n    _mounted.current = true;\n    const isDirty = control._proxyFormState.isDirty && control._getDirty();\n\n    if (isDirty !== control._formState.isDirty) {\n      control._subjects.state.next({\n        isDirty,\n      });\n    }\n    control._updateValid();\n\n    return () => {\n      _mounted.current = false;\n    };\n  }, [control]);\n\n  return getProxyFormState(\n    formState,\n    control,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default (\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport cloneObject from './utils/cloneObject';\nimport isUndefined from './utils/isUndefined';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.watch,\n    callback: (formState: {\n      name?: InternalFieldName;\n      values?: FieldValues;\n    }) => {\n      if (\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          formState.name,\n          exact,\n        )\n      ) {\n        const fieldValues = generateWatchOutput(\n          _name.current as InternalFieldName,\n          control._names,\n          formState.values || control._formValues,\n        );\n\n        updateValue(\n          isUndefined(fieldValues) ? defaultValue : cloneObject(fieldValues),\n        );\n      }\n    },\n  });\n\n  const [value, updateValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? control._getWatch(name as InternalFieldName)\n      : defaultValue,\n  );\n\n  React.useEffect(() => control._removeUnmounted());\n\n  return value;\n}\n","import React from 'react';\n\nimport getEventValue from './logic/getEventValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport {\n  ControllerFieldState,\n  Field,\n  FieldPath,\n  FieldPathValue,\n  FieldValues,\n  InternalFieldName,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport { useWatch } from './useWatch';\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: UseControllerProps<TFieldValues, TName>,\n): UseControllerReturn<TFieldValues, TName> {\n  const methods = useFormContext<TFieldValues>();\n  const { name, control = methods.control, shouldUnregister } = props;\n  const isArrayField = isNameInFieldArray(control._names.array, name);\n  const value = useWatch({\n    control,\n    name,\n    defaultValue: get(\n      control._formValues,\n      name,\n      get(control._defaultValues, name, props.defaultValue),\n    ),\n    exact: true,\n  }) as FieldPathValue<TFieldValues, TName>;\n  const formState = useFormState({\n    control,\n    name,\n  });\n\n  const _registerProps = React.useRef(\n    control.register(name, {\n      ...props.rules,\n      value,\n    }),\n  );\n\n  React.useEffect(() => {\n    const updateMounted = (name: InternalFieldName, value: boolean) => {\n      const field: Field = get(control._fields, name);\n\n      if (field) {\n        field._f.mount = value;\n      }\n    };\n\n    updateMounted(name, true);\n\n    return () => {\n      const _shouldUnregisterField =\n        control._options.shouldUnregister || shouldUnregister;\n\n      (\n        isArrayField\n          ? _shouldUnregisterField && !control._stateFlags.action\n          : _shouldUnregisterField\n      )\n        ? control.unregister(name)\n        : updateMounted(name, false);\n    };\n  }, [name, control, isArrayField, shouldUnregister]);\n\n  return {\n    field: {\n      name,\n      value,\n      onChange: React.useCallback(\n        (event) =>\n          _registerProps.current.onChange({\n            target: {\n              value: getEventValue(event),\n              name: name as InternalFieldName,\n            },\n            type: EVENTS.CHANGE,\n          }),\n        [name],\n      ),\n      onBlur: React.useCallback(\n        () =>\n          _registerProps.current.onBlur({\n            target: {\n              value: get(control._formValues, name),\n              name: name as InternalFieldName,\n            },\n            type: EVENTS.BLUR,\n          }),\n        [name, control],\n      ),\n      ref: (elm) => {\n        const field = get(control._fields, name);\n\n        if (field && elm) {\n          field._f.ref = {\n            focus: () => elm.focus(),\n            select: () => elm.select(),\n            setCustomValidity: (message: string) =>\n              elm.setCustomValidity(message),\n            reportValidity: () => elm.reportValidity(),\n          };\n        }\n      },\n    },\n    formState,\n    fieldState: Object.defineProperties(\n      {},\n      {\n        invalid: {\n          enumerable: true,\n          get: () => !!get(formState.errors, name),\n        },\n        isDirty: {\n          enumerable: true,\n          get: () => !!get(formState.dirtyFields, name),\n        },\n        isTouched: {\n          enumerable: true,\n          get: () => !!get(formState.touchedFields, name),\n        },\n        error: {\n          enumerable: true,\n          get: () => get(formState.errors, name),\n        },\n      },\n    ) as ControllerFieldState,\n  };\n}\n","import { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: ControllerProps<TFieldValues, TName>,\n) => props.render(useController<TFieldValues, TName>(props));\n\nexport { Controller };\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name?: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { FieldArrayMethodProps, InternalFieldName } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  name: InternalFieldName,\n  index: number,\n  options: FieldArrayMethodProps = {},\n): string =>\n  options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n      `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport compact from '../utils/compact';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  InternalFieldErrors,\n  Message,\n  NativeFieldValue,\n} from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends NativeFieldValue>(\n  field: Field,\n  inputValue: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n          ? inputValue > maxOutput.value\n          : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n          ? inputValue < minOutput.value\n          : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function append<T>(data: T[], value: T | T[]): T[] {\n  return [...data, ...convertToArrayPayload(value)];\n}\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...convertToArrayPayload(value),\n    ...data.slice(index),\n  ];\n}\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  if (isUndefined(data[to])) {\n    data[to] = undefined;\n  }\n  data.splice(to, 0, data.splice(from, 1)[0]);\n\n  return data;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function prepend<T>(data: T[], value: T | T[]): T[] {\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) && isEmptyArray(objectRef)))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","export default <T>(fieldValues: T[], index: number, value: T) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import React from 'react';\n\nimport focusFieldBy from './logic/focusFieldBy';\nimport generateId from './logic/generateId';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport isWatched from './logic/isWatched';\nimport updateFieldArrayRootError from './logic/updateFieldArrayRootError';\nimport validateField from './logic/validateField';\nimport appendAt from './utils/append';\nimport cloneObject from './utils/cloneObject';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport getValidationModes from './utils/getValidationModes';\nimport insertAt from './utils/insert';\nimport isEmptyObject from './utils/isEmptyObject';\nimport moveArrayAt from './utils/move';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { VALIDATION_MODE } from './constants';\nimport {\n  Control,\n  Field,\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayPath,\n  FieldArrayWithId,\n  FieldErrors,\n  FieldPath,\n  FieldValues,\n  InternalFieldName,\n  RegisterOptions,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useFieldArray<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldArrayName extends FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\n  TKeyName extends string = 'id',\n>(\n  props: UseFieldArrayProps<TFieldValues, TFieldArrayName, TKeyName>,\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id',\n    shouldUnregister,\n  } = props;\n  const [fields, setFields] = React.useState(control._getFieldArray(name));\n  const ids = React.useRef<string[]>(\n    control._getFieldArray(name).map(generateId),\n  );\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n\n  props.rules &&\n    (control as Control).register(\n      name as FieldPath<TFieldValues>,\n      props.rules as RegisterOptions<TFieldValues>,\n    );\n\n  const callback = React.useCallback(\n    ({\n      values,\n      name: fieldArrayName,\n    }: {\n      values?: FieldValues;\n      name?: InternalFieldName;\n    }) => {\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        const fieldValues = get(values, _name.current);\n        if (Array.isArray(fieldValues)) {\n          setFields(fieldValues);\n          ids.current = fieldValues.map(generateId);\n        }\n      }\n    },\n    [],\n  );\n\n  useSubscribe({\n    callback,\n    subject: control._subjects.array,\n  });\n\n  const updateValues = React.useCallback(\n    <\n      T extends Partial<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >[],\n    >(\n      updatedFieldArrayValues: T,\n    ) => {\n      _actioned.current = true;\n      control._updateFieldArray(name, updatedFieldArrayValues);\n    },\n    [control, name],\n  );\n\n  const append = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const appendValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = appendAt(\n      control._getFieldArray(name),\n      appendValue,\n    );\n    control._names.focus = getFocusFieldName(\n      name,\n      updatedFieldArrayValues.length - 1,\n      options,\n    );\n    ids.current = appendAt(ids.current, appendValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const prepend = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const prependValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = prependAt(\n      control._getFieldArray(name),\n      prependValue,\n    );\n    control._names.focus = getFocusFieldName(name, 0, options);\n    ids.current = prependAt(ids.current, prependValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const remove = (index?: number | number[]) => {\n    const updatedFieldArrayValues: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = removeArrayAt(control._getFieldArray(name), index);\n    ids.current = removeArrayAt(ids.current, index);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n      argA: index,\n    });\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const insertValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = insertAt(\n      control._getFieldArray(name),\n      index,\n      insertValue,\n    );\n    control._names.focus = getFocusFieldName(name, index, options);\n    ids.current = insertAt(ids.current, index, insertValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, insertAt, {\n      argA: index,\n      argB: fillEmptyArray(value),\n    });\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n    swapArrayAt(ids.current, indexA, indexB);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    moveArrayAt(updatedFieldArrayValues, from, to);\n    moveArrayAt(ids.current, from, to);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      false,\n    );\n  };\n\n  const update = (\n    index: number,\n    value: FieldArray<TFieldValues, TFieldArrayName>,\n  ) => {\n    const updateValue = cloneObject(value);\n    const updatedFieldArrayValues = updateAt(\n      control._getFieldArray<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >(name),\n      index,\n      updateValue as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>,\n    );\n    ids.current = [...updatedFieldArrayValues].map((item, i) =>\n      !item || i === index ? generateId() : ids.current[i],\n    );\n    updateValues(updatedFieldArrayValues);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      updateAt,\n      {\n        argA: index,\n        argB: updateValue,\n      },\n      true,\n      false,\n    );\n  };\n\n  const replace = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n  ) => {\n    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n    ids.current = updatedFieldArrayValues.map(generateId);\n    updateValues([...updatedFieldArrayValues]);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      [...updatedFieldArrayValues],\n      <T>(data: T): T => data,\n      {},\n      true,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    control._stateFlags.action = false;\n\n    isWatched(name, control._names) && control._subjects.state.next({});\n\n    if (\n      _actioned.current &&\n      (!getValidationModes(control._options.mode).isOnSubmit ||\n        control._formState.isSubmitted)\n    ) {\n      if (control._options.resolver) {\n        control._executeSchema([name]).then((result) => {\n          const error = get(result.errors, name);\n          const existingError = get(control._formState.errors, name);\n\n          if (\n            existingError ? !error && existingError.type : error && error.type\n          ) {\n            error\n              ? set(control._formState.errors, name, error)\n              : unset(control._formState.errors, name);\n            control._subjects.state.next({\n              errors: control._formState.errors as FieldErrors<TFieldValues>,\n            });\n          }\n        });\n      } else {\n        const field: Field = get(control._fields, name);\n        if (field && field._f) {\n          validateField(\n            field,\n            get(control._formValues, name),\n            control._options.criteriaMode === VALIDATION_MODE.all,\n            control._options.shouldUseNativeValidation,\n            true,\n          ).then(\n            (error) =>\n              !isEmptyObject(error) &&\n              control._subjects.state.next({\n                errors: updateFieldArrayRootError(\n                  control._formState.errors,\n                  error,\n                  name,\n                ) as FieldErrors<TFieldValues>,\n              }),\n          );\n        }\n      }\n    }\n\n    control._subjects.watch.next({\n      name,\n      values: control._formValues,\n    });\n\n    control._names.focus &&\n      focusFieldBy(\n        control._fields,\n        (key) => !!key && key.startsWith(control._names.focus || ''),\n      );\n\n    control._names.focus = '';\n\n    control._proxyFormState.isValid && control._updateValid();\n  }, [fields, name, control]);\n\n  React.useEffect(() => {\n    !get(control._formValues, name) && control._updateFieldArray(name);\n\n    return () => {\n      (control._options.shouldUnregister || shouldUnregister) &&\n        control.unregister(name as FieldPath<TFieldValues>);\n    };\n  }, [name, control, keyName, shouldUnregister]);\n\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control]),\n    move: React.useCallback(move, [updateValues, name, control]),\n    prepend: React.useCallback(prepend, [updateValues, name, control]),\n    append: React.useCallback(append, [updateValues, name, control]),\n    remove: React.useCallback(remove, [updateValues, name, control]),\n    insert: React.useCallback(insert, [updateValues, name, control]),\n    update: React.useCallback(update, [updateValues, name, control]),\n    replace: React.useCallback(replace, [updateValues, name, control]),\n    fields: React.useMemo(\n      () =>\n        fields.map((field, index) => ({\n          ...field,\n          [keyName]: ids.current[index] || generateId(),\n        })) as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>[],\n      [fields, keyName],\n    ),\n  };\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","export default (value: unknown): value is HTMLElement => {\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  const ElementClass =\n    owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement;\n  return value instanceof ElementClass;\n};\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<U>(data: U, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: any,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        deepEqual(data[key], formValues[key])\n          ? delete dirtyFieldsFromValues[key]\n          : (dirtyFieldsFromValues[key] = true);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : value\n      ? +value\n      : value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {},\n  };\n  let _fields = {};\n  let _defaultValues = cloneObject(_options.defaultValues) || {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    watch: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(callback, wait);\n    };\n\n  const _updateValid = async () => {\n    if (_proxyFormState.isValid) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (value: boolean) =>\n    _proxyFormState.isValidating &&\n    value !== _formState.isValidating &&\n    _subjects.state.next({\n      isValidating: value,\n    });\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method) {\n      _stateFlags.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _stateFlags.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        isPreviousDirty = get(_formState.dirtyFields, name);\n        const isCurrentFieldPristine = deepEqual(\n          get(_defaultValues, name),\n          fieldValue,\n        );\n        isCurrentFieldPristine\n          ? unset(_formState.dirtyFields, name)\n          : set(_formState.dirtyFields, name, true);\n        output.dirtyFields = _formState.dirtyFields;\n        shouldUpdateField =\n          shouldUpdateField || isPreviousDirty !== !isCurrentFieldPristine;\n      }\n    }\n\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          (_proxyFormState.touchedFields &&\n            isPreviousFieldTouched !== isBlurEvent);\n      }\n    }\n\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    _updateIsValidating(false);\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    await _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const fieldError = await validateField(\n            field,\n            get(_formValues, _f.name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n            isFieldArrayRoot,\n          );\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        fieldValue &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_stateFlags.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n          ? _defaultValues\n          : isString(names)\n          ? { [names]: defaultValue }\n          : defaultValue),\n      },\n      isGlobal,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _stateFlags.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.watch.next({\n              name,\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues,\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({});\n    _subjects.watch.next({\n      name,\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n    const getCurrentFieldValue = () =>\n      target.type ? getFieldValue(field._f) : getEventValue(event);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.watch.next({\n          name,\n          type: event.type,\n        });\n\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({});\n\n      _updateIsValidating(true);\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            get(_formValues, name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        if (error) {\n          isValid = false;\n        } else if (_proxyFormState.isValid) {\n          isValid = await executeBuiltInValidation(_fields, true);\n        }\n      }\n\n      if (!isPrimitive(fieldValue) || getCurrentFieldValue() === fieldValue) {\n        field._f.deps &&\n          trigger(\n            field._f.deps as\n              | FieldPath<TFieldValues>\n              | FieldPath<TFieldValues>[],\n          );\n        shouldRenderByError(name, isValid, error, fieldState);\n      } else {\n        _updateIsValidating(false);\n      }\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _updateIsValidating(true);\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => key && get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_stateFlags.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames)\n      : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(_formState.errors, inputName),\n        )\n      : (_formState.errors = {});\n\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.watch.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.shouldUseNativeValidation\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    focusFieldBy(\n      _fields,\n      (key) => key && get(_formState.errors, key),\n      _names.mount,\n    );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues: any = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (_options.resolver) {\n          const { errors, values } = await _executeSchema();\n          _formState.errors = errors;\n          fieldValues = values;\n        } else {\n          await executeBuiltInValidation(_fields);\n        }\n\n        if (isEmptyObject(_formState.errors)) {\n          _subjects.state.next({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          if (onInvalid) {\n            await onInvalid({ ..._formState.errors }, e);\n          }\n\n          _focusError();\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        _formState.isSubmitted = true;\n        _subjects.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(_formState.errors) && hasNoPromiseError,\n          submitCount: _formState.submitCount + 1,\n          errors: _formState.errors,\n        });\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, get(_defaultValues, name))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values =\n      formValues && !isEmptyObject(formValues)\n        ? cloneUpdatedValues\n        : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values,\n      });\n\n      _subjects.watch.next({\n        values,\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _stateFlags.mount =\n      !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n\n    _stateFlags.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.isDirty\n          : !!(\n              keepStateOptions.keepDefaultValues &&\n              !deepEqual(formValues, _defaultValues)\n            ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.dirtyFields\n          : keepStateOptions.keepDefaultValues && formValues\n          ? getDirtyFields(_defaultValues, formValues)\n          : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? formValues(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _focusError,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _stateFlags() {\n        return _stateFlags;\n      },\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport { FieldValues, FormState, UseFormProps, UseFormReturn } from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    callback: React.useCallback(\n      (value: FieldValues) => {\n        if (shouldRenderFormState(value, control._proxyFormState, true)) {\n          control._formState = {\n            ...control._formState,\n            ...value,\n          };\n\n          updateFormState({ ...control._formState });\n        }\n      },\n      [control],\n    ),\n  });\n\n  React.useEffect(() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n      control._subjects.state.next({});\n    }\n\n    control._removeUnmounted();\n  });\n\n  React.useEffect(() => {\n    formState.submitCount && control._focusError();\n  }, [control, formState.submitCount]);\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n","import { useMemo, createContext, useContext } from \"react\"\n\nexport const StyleCtx = createContext({})\n\nexport const useStyles = (\n    type,\n    inlineStyles\n) => {\n    const baseStyles = useContext(StyleCtx)\n\n    return useMemo(() => {\n        return inlineStyles\n            ? { ...baseStyles[type], ...inlineStyles }\n            : (baseStyles[type])\n    }, [ type, baseStyles, inlineStyles ])\n}\n","import { TitleField } from \"./TitleField\"\nimport { TextField } from \"./TextField\"\nimport { SelectField } from \"./SelectField\"\nimport { RadioField } from \"./RadioField\"\nimport { CheckboxField } from \"./CheckboxField\"\nimport { UploadField } from \"./UploadField\"\nimport { SignatureField } from \"./SignatureField\"\n\nexport const renderField = ([ name, field ]) => {\n  \n    let Component = null\n    \n    switch (field.type) {\n  \n        case \"title\":\n            Component = TitleField\n            break\n\n        case \"text\":\n            Component = TextField\n            break\n      \n        case \"select\":\n            Component = SelectField\n            break\n  \n        case \"radio\":\n            Component = RadioField\n            break\n  \n        case \"checkbox\":\n            Component = CheckboxField\n            break\n\n        case \"upload\":\n            Component = UploadField\n            break\n      \n        case \"signature\":\n            Component = SignatureField\n            break\n  \n        default:\n            console.log(field.type, \"isn't implemented yet!\")\n            break\n    }\n  \n    return (\n        <Component\n            key={name}\n            name={name}\n            field={field}\n            {...field.props}\n        />\n    )\n}","import React, { useMemo } from \"react\"\n\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const TitleField = ({\n    id,\n    name,\n    field,\n}) => {\n    const {\n        label,\n        shouldDisplay,\n        styles = {},\n    } = field\n\n    const fieldStyles = useStyles(\"titleField\", styles)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay() : true\n    }, [ shouldDisplay ])\n\n    return isVisible ? (\n        <h1 {...fieldStyles}>{label}</h1>\n    ) : null\n}","import React, { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form, FormGroup, FormControl } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const TextField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n    const {\n        label,\n        placeholder,\n        htmlInputType,\n        helperText,\n        required = false,\n        leftInputAddon,\n        rightInputAddon,\n        shouldDisplay,\n        styles = {},\n    } = field\n\n    const fieldStyles = useStyles(\"textField\", styles)\n\n    const { register, watch, handleSubmit } = useFormContext()\n\n    const errorMessage = useErrorMessage(name, label)\n\n    const values = watch(name)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay(values) : true\n    }, [ values, shouldDisplay ])\n\n    console.log(\"handle\", handleSubmit)\n\n    return isVisible ? (\n        <Form.Group\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n            {/* {!!leftInputAddon || rightInputAddon ? (\n        <InputGroup {...fieldStyles.inputGroup}>\n          {!!leftInputAddon && <InputLeftAddon {...leftInputAddon} />}\n          <Input\n            data-testid={id}\n            type={htmlInputType || 'text'}\n            name={name}\n            aria-label={name}\n            ref={register()}\n            placeholder={placeholder}\n            defaultValue={defaultValue || ''}\n            {...fieldStyles.input}\n          />\n          {!!rightInputAddon && <InputRightAddon {...rightInputAddon} />}\n        </InputGroup>\n      ) : ( */}\n            <FormControl\n                type={htmlInputType || \"text\"}\n                id={id}\n                name={name}\n                aria-label={name}\n                {...register(name)}\n                onBlur={() => {\n                    console.log(\"test blur\"); handleSubmit()\n                }}\n                required={required}\n                placeholder={placeholder}\n                defaultValue={defaultValue || \"\"}\n                {...fieldStyles.input}\n            />\n            {/* )} */}\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </Form.Group>\n    ) : null\n}\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const componentProps = {\n      ...defaultProps,\n      ...props\n    };\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...componentProps\n    });\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nexport const useErrorMessage = (name, label) => {\n    const { formState: { errors } } = useFormContext()\n\n    return useMemo(() => {\n        const error = errors[name]\n\n        if (!error) return undefined\n\n        const message = error.message\n\n        if (message) return message.replace(name, label || name)\n        return \"Field validation failed\"\n    }, [ errors, name, label ])\n}\n","import React, { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form, FormGroup, FormControl } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const SelectField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n\n    const { label, helperText, required = false, multi = false, shouldDisplay, styles = {} } = field\n\n    const { register, watch } = useFormContext()\n\n    const values = watch(name)\n\n    const fieldStyles = useStyles(\"selectField\", styles)\n\n    const errorMessage = useErrorMessage(name, label)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay(values) : true\n    }, [ values, shouldDisplay ])\n\n    return isVisible ? (\n        <FormGroup\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n            <FormControl\n                as=\"select\"\n                id={id}\n                name={name}\n                {...register(name)}\n                required={required}\n                multiple={multi}\n                defaultValue={defaultValue || field.options[0].value}\n                {...fieldStyles.select}\n            >\n                {field.options.map(option => (\n                    <option key={option.value} value={option.value} disabled={option.disabled}>\n                        {option.label || option.value}\n                    </option>\n                ))}\n            </FormControl>\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </FormGroup>\n    ) : null\n}","import React, { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form, FormGroup } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const RadioField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n\n    const { label, helperText, required = false, shouldDisplay, styles = {} } = field\n\n    const { register } = useFormContext()\n    const fieldStyles = useStyles(\"radioField\", styles)\n    const errorMessage = useErrorMessage(name, label)\n\n    console.log(\"error\", errorMessage)\n\n    return (\n        <FormGroup\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n      \n            <div>\n                {field.options.map((option, i) => (\n                    <Form.Check \n                        key={i}\n                        type=\"radio\"\n                        name={name}\n                        {...register(name)}\n                        id={name + \"-\" + option.label}\n                        label={option.label}\n                        value={option.value}\n                    />\n                ))}\n            </div>\n\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </FormGroup>\n    )\n}","import React from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const CheckboxField = ({\n    id,\n    name,\n    field,\n}) => {\n\n    const { label, helperText, required = false, styles = {} } = field\n\n    const { register, watch } = useFormContext()\n\n    const fieldStyles = useStyles(\"checkboxField\", styles)\n\n    const errorMessage = useErrorMessage(name, label)\n\n    return (\n        <Form.Group\n            key={id}\n            controlId={id}\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n      \n            <div>\n                {field.options.map((option, i) => (\n                    <Form.Check \n                        key={i}\n                        type=\"checkbox\"\n                        name={name}\n                        {...register(name)}\n                        id={name + \"-\" + option.label}\n                        label={option.label}\n                        value={option.value}\n                    />\n                ))}\n            </div>\n\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </Form.Group>\n    )\n}","import React, { useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form, FormControl } from \"react-bootstrap\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const UploadField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n    const {\n        label,\n        placeholder,\n        helperText,\n        required = false,\n        accept = \"*\",\n        shouldDisplay,\n        styles = {},\n    } = field\n\n    const fieldStyles = useStyles(\"uploadField\", styles)\n\n    const { register, watch } = useFormContext()\n\n    const errorMessage = useErrorMessage(name, label)\n\n    const values = watch(name)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay(values) : true\n    }, [ values, shouldDisplay ])\n\n    return isVisible ? (\n        <Form.Group\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n            <FormControl\n                type=\"file\"\n                accept={accept}\n                name={name}\n                aria-label={name}\n                {...register(name)}\n                required={required}\n                placeholder={placeholder}\n                defaultValue={defaultValue || \"\"}\n                {...fieldStyles.input}\n            />\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </Form.Group>\n    ) : null\n}","import React, { useMemo, useRef } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\n\nimport { Form } from \"react-bootstrap\"\nimport SignaturePad from \"react-signature-canvas\"\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\"\nimport { useStyles } from \"../hooks/useStyles\"\n\nexport const SignatureField = ({\n    id,\n    name,\n    field,\n    defaultValue,\n}) => {\n\n    const {\n        label,\n        placeholder,\n        helperText,\n        required = false,\n        shouldDisplay,\n        styles = {},\n    } = field\n\n    const ref = useRef(0)\n    const fieldStyles = useStyles(\"signatureField\", styles)\n    const { setValue, watch } = useFormContext()\n    const errorMessage = useErrorMessage(name, label)\n\n    const values = watch(name)\n\n    const isVisible = useMemo(() => {\n        return shouldDisplay ? shouldDisplay(values) : true\n    }, [ values, shouldDisplay ])\n\n    const save = () => {\n        setValue(name, ref.current.getTrimmedCanvas().toDataURL(\"image/png\"))\n    }\n\n    const clear = () => ref.current.clear()\n\n    return isVisible ? (\n        <Form.Group\n            key={id}\n            controlId={id}\n            className=\"mb-3\"\n            {...fieldStyles.control}\n        >\n            {!!label && (\n                <Form.Label {...fieldStyles.label}>\n                    {label}\n                </Form.Label>\n            )}\n            <div className=\"row\">\n                <div className=\"col-10\">\n                    <SignaturePad\n                        canvasProps={{ style: { width: \"100%\", height: fieldStyles.height, background: \"#fff\" } }}\n                        ref={ref}\n                        onEnd={save}\n                    />\n                </div>\n                <div className=\"col-2 d-flex align-items-center\">\n                    <button className=\"btn btn-primary\" onClick={clear}>\n              ↺\n                    </button>\n                </div>\n            </div>\n            {!!helperText && (\n                <Form.Text {...fieldStyles.helperText}>\n                    {helperText}\n                </Form.Text>\n            )}\n            <Form.Control.Feedback type=\"invalid\" {...fieldStyles.errorMessage}>\n                {errorMessage}\n            </Form.Control.Feedback>\n        </Form.Group>\n    ) : null\n}\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"prop-types\"),require(\"react\"),require(\"signature_pad\"),require(\"trim-canvas\")):\"function\"==typeof define&&define.amd?define([\"prop-types\",\"react\",\"signature_pad\",\"trim-canvas\"],t):\"object\"==typeof exports?exports.SignatureCanvas=t(require(\"prop-types\"),require(\"react\"),require(\"signature_pad\"),require(\"trim-canvas\")):e.SignatureCanvas=t(e[\"prop-types\"],e.react,e.signature_pad,e[\"trim-canvas\"])}(this,function(e,t,n,r){return function(e){function t(r){if(n[r])return n[r].exports;var a=n[r]={exports:{},id:r,loaded:!1};return e[r].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}var n={};return t.m=e,t.c=n,t.p=\"\",t(0)}([function(e,t,n){\"use strict\";function r(e){return e&&e.__esModule?e:{default:e}}function a(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function u(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0});var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),f=n(1),p=r(f),l=n(2),d=r(l),v=n(3),h=r(v),_=n(4),g=r(_),m=function(e){function t(){var e,n,r,u;o(this,t);for(var s=arguments.length,c=Array(s),f=0;f<s;f++)c[f]=arguments[f];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(c))),r._sigPad=null,r._excludeOurProps=function(){var e=r.props,t=(e.canvasProps,e.clearOnResize,a(e,[\"canvasProps\",\"clearOnResize\"]));return t},r.getCanvas=function(){return r._canvas},r.getTrimmedCanvas=function(){var e=document.createElement(\"canvas\");return e.width=r._canvas.width,e.height=r._canvas.height,e.getContext(\"2d\").drawImage(r._canvas,0,0),(0,g.default)(e)},r.getSignaturePad=function(){return r._sigPad},r._checkClearOnResize=function(){r.props.clearOnResize&&r._resizeCanvas()},r._resizeCanvas=function(){var e=r.props.canvasProps||{},t=e.width,n=e.height;if(!t||!n){var a=r._canvas,o=Math.max(window.devicePixelRatio||1,1);t||(a.width=a.offsetWidth*o),n||(a.height=a.offsetHeight*o),a.getContext(\"2d\").scale(o,o),r.clear()}},r.on=function(){return window.addEventListener(\"resize\",r._checkClearOnResize),r._sigPad.on()},r.off=function(){return window.removeEventListener(\"resize\",r._checkClearOnResize),r._sigPad.off()},r.clear=function(){return r._sigPad.clear()},r.isEmpty=function(){return r._sigPad.isEmpty()},r.fromDataURL=function(e,t){return r._sigPad.fromDataURL(e,t)},r.toDataURL=function(e,t){return r._sigPad.toDataURL(e,t)},r.fromData=function(e){return r._sigPad.fromData(e)},r.toData=function(){return r._sigPad.toData()},u=n,i(r,u)}return u(t,e),c(t,[{key:\"componentDidMount\",value:function(){this._sigPad=new h.default(this._canvas,this._excludeOurProps()),this._resizeCanvas(),this.on()}},{key:\"componentWillUnmount\",value:function(){this.off()}},{key:\"componentDidUpdate\",value:function(){Object.assign(this._sigPad,this._excludeOurProps())}},{key:\"render\",value:function(){var e=this,t=this.props.canvasProps;return d.default.createElement(\"canvas\",s({ref:function(t){e._canvas=t}},t))}}]),t}(l.Component);m.propTypes={velocityFilterWeight:p.default.number,minWidth:p.default.number,maxWidth:p.default.number,minDistance:p.default.number,dotSize:p.default.oneOfType([p.default.number,p.default.func]),penColor:p.default.string,throttle:p.default.number,onEnd:p.default.func,onBegin:p.default.func,canvasProps:p.default.object,clearOnResize:p.default.bool},m.defaultProps={clearOnResize:!0},t.default=m},function(t,n){t.exports=e},function(e,n){e.exports=t},function(e,t){e.exports=n},function(e,t){e.exports=r}])});","import React, { useMemo } from \"react\"\nimport { useForm, FormProvider } from \"react-hook-form\"\nimport merge from \"lodash.merge\"\n\nimport { StyleCtx } from \"../hooks/useStyles\"\nimport { renderField } from \"./Factory\"\n\nconst defaultStyles = {}\n\nexport const FlexForm = (props) => {\n\n    const {\n        schema = {},\n        handleSubmit,\n        formOptions = {},\n        overwriteDefaultStyles,\n        children,\n        styles = {},\n    } = props\n\n    let formElements = \"undefined\" !== typeof props.step ? Object.entries(schema[props.step]).map(renderField) : Object.entries(schema).map(renderField)\n\n    let elements = children instanceof Array ? children.reduce((acc, item) => {\n\n        if (\"function\" ===  typeof item) {\n            item = item(formElements)\n        }\n    \n        acc.push(item)\n    \n        return acc\n    \n    }, []) : children(formElements)\n\n    const form = useForm(formOptions)\n\n    const baseStyles = useMemo(() => {\n        return overwriteDefaultStyles ? styles : merge(defaultStyles, styles)\n    }, [ styles, overwriteDefaultStyles ])\n\n    return (\n        <StyleCtx.Provider value={baseStyles}>\n            <FormProvider {...form}>\n                <form\n                    onSubmit={form.handleSubmit(handleSubmit)}\n                    {...baseStyles.form?.container}\n                >\n                    {elements}\n                </form>\n            </FormProvider>\n        </StyleCtx.Provider>\n    )\n}"],"names":["append","appendAt","prepend","prependAt","insert","insertAt","isCheckBox"],"version":3,"file":"index.js.map"}